/*
Chapar Customer API

API for interacting with the Chapar shipping service. All POST requests use a unique `multipart/form-data` structure where the main payload is a JSON string inside a form field named `input`.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PriceDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceDetails{}

// PriceDetails struct for PriceDetails
type PriceDetails struct {
	Zone string `json:"zone"`
	FldManualCost string `json:"fld_Manual_Cost"`
	FldPackCost int32 `json:"fld_Pack_Cost"`
	FldChargeCost int32 `json:"fld_Charge_Cost"`
	FldManualInsurance int32 `json:"fld_Manual_Insurance"`
	FldLabCost int32 `json:"fld_Lab_Cost"`
	FldManualVAT int32 `json:"fld_Manual_VAT"`
	FldTotalCost int32 `json:"fld_Total_Cost"`
	PriceList string `json:"price_list"`
	MinIns string `json:"min_ins"`
}

type _PriceDetails PriceDetails

// NewPriceDetails instantiates a new PriceDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceDetails(zone string, fldManualCost string, fldPackCost int32, fldChargeCost int32, fldManualInsurance int32, fldLabCost int32, fldManualVAT int32, fldTotalCost int32, priceList string, minIns string) *PriceDetails {
	this := PriceDetails{}
	this.Zone = zone
	this.FldManualCost = fldManualCost
	this.FldPackCost = fldPackCost
	this.FldChargeCost = fldChargeCost
	this.FldManualInsurance = fldManualInsurance
	this.FldLabCost = fldLabCost
	this.FldManualVAT = fldManualVAT
	this.FldTotalCost = fldTotalCost
	this.PriceList = priceList
	this.MinIns = minIns
	return &this
}

// NewPriceDetailsWithDefaults instantiates a new PriceDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceDetailsWithDefaults() *PriceDetails {
	this := PriceDetails{}
	return &this
}

// GetZone returns the Zone field value
func (o *PriceDetails) GetZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Zone
}

// GetZoneOk returns a tuple with the Zone field value
// and a boolean to check if the value has been set.
func (o *PriceDetails) GetZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Zone, true
}

// SetZone sets field value
func (o *PriceDetails) SetZone(v string) {
	o.Zone = v
}

// GetFldManualCost returns the FldManualCost field value
func (o *PriceDetails) GetFldManualCost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FldManualCost
}

// GetFldManualCostOk returns a tuple with the FldManualCost field value
// and a boolean to check if the value has been set.
func (o *PriceDetails) GetFldManualCostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FldManualCost, true
}

// SetFldManualCost sets field value
func (o *PriceDetails) SetFldManualCost(v string) {
	o.FldManualCost = v
}

// GetFldPackCost returns the FldPackCost field value
func (o *PriceDetails) GetFldPackCost() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FldPackCost
}

// GetFldPackCostOk returns a tuple with the FldPackCost field value
// and a boolean to check if the value has been set.
func (o *PriceDetails) GetFldPackCostOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FldPackCost, true
}

// SetFldPackCost sets field value
func (o *PriceDetails) SetFldPackCost(v int32) {
	o.FldPackCost = v
}

// GetFldChargeCost returns the FldChargeCost field value
func (o *PriceDetails) GetFldChargeCost() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FldChargeCost
}

// GetFldChargeCostOk returns a tuple with the FldChargeCost field value
// and a boolean to check if the value has been set.
func (o *PriceDetails) GetFldChargeCostOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FldChargeCost, true
}

// SetFldChargeCost sets field value
func (o *PriceDetails) SetFldChargeCost(v int32) {
	o.FldChargeCost = v
}

// GetFldManualInsurance returns the FldManualInsurance field value
func (o *PriceDetails) GetFldManualInsurance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FldManualInsurance
}

// GetFldManualInsuranceOk returns a tuple with the FldManualInsurance field value
// and a boolean to check if the value has been set.
func (o *PriceDetails) GetFldManualInsuranceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FldManualInsurance, true
}

// SetFldManualInsurance sets field value
func (o *PriceDetails) SetFldManualInsurance(v int32) {
	o.FldManualInsurance = v
}

// GetFldLabCost returns the FldLabCost field value
func (o *PriceDetails) GetFldLabCost() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FldLabCost
}

// GetFldLabCostOk returns a tuple with the FldLabCost field value
// and a boolean to check if the value has been set.
func (o *PriceDetails) GetFldLabCostOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FldLabCost, true
}

// SetFldLabCost sets field value
func (o *PriceDetails) SetFldLabCost(v int32) {
	o.FldLabCost = v
}

// GetFldManualVAT returns the FldManualVAT field value
func (o *PriceDetails) GetFldManualVAT() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FldManualVAT
}

// GetFldManualVATOk returns a tuple with the FldManualVAT field value
// and a boolean to check if the value has been set.
func (o *PriceDetails) GetFldManualVATOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FldManualVAT, true
}

// SetFldManualVAT sets field value
func (o *PriceDetails) SetFldManualVAT(v int32) {
	o.FldManualVAT = v
}

// GetFldTotalCost returns the FldTotalCost field value
func (o *PriceDetails) GetFldTotalCost() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FldTotalCost
}

// GetFldTotalCostOk returns a tuple with the FldTotalCost field value
// and a boolean to check if the value has been set.
func (o *PriceDetails) GetFldTotalCostOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FldTotalCost, true
}

// SetFldTotalCost sets field value
func (o *PriceDetails) SetFldTotalCost(v int32) {
	o.FldTotalCost = v
}

// GetPriceList returns the PriceList field value
func (o *PriceDetails) GetPriceList() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PriceList
}

// GetPriceListOk returns a tuple with the PriceList field value
// and a boolean to check if the value has been set.
func (o *PriceDetails) GetPriceListOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceList, true
}

// SetPriceList sets field value
func (o *PriceDetails) SetPriceList(v string) {
	o.PriceList = v
}

// GetMinIns returns the MinIns field value
func (o *PriceDetails) GetMinIns() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MinIns
}

// GetMinInsOk returns a tuple with the MinIns field value
// and a boolean to check if the value has been set.
func (o *PriceDetails) GetMinInsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinIns, true
}

// SetMinIns sets field value
func (o *PriceDetails) SetMinIns(v string) {
	o.MinIns = v
}

func (o PriceDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["zone"] = o.Zone
	toSerialize["fld_Manual_Cost"] = o.FldManualCost
	toSerialize["fld_Pack_Cost"] = o.FldPackCost
	toSerialize["fld_Charge_Cost"] = o.FldChargeCost
	toSerialize["fld_Manual_Insurance"] = o.FldManualInsurance
	toSerialize["fld_Lab_Cost"] = o.FldLabCost
	toSerialize["fld_Manual_VAT"] = o.FldManualVAT
	toSerialize["fld_Total_Cost"] = o.FldTotalCost
	toSerialize["price_list"] = o.PriceList
	toSerialize["min_ins"] = o.MinIns
	return toSerialize, nil
}

func (o *PriceDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"zone",
		"fld_Manual_Cost",
		"fld_Pack_Cost",
		"fld_Charge_Cost",
		"fld_Manual_Insurance",
		"fld_Lab_Cost",
		"fld_Manual_VAT",
		"fld_Total_Cost",
		"price_list",
		"min_ins",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPriceDetails := _PriceDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPriceDetails)

	if err != nil {
		return err
	}

	*o = PriceDetails(varPriceDetails)

	return err
}

type NullablePriceDetails struct {
	value *PriceDetails
	isSet bool
}

func (v NullablePriceDetails) Get() *PriceDetails {
	return v.value
}

func (v *NullablePriceDetails) Set(val *PriceDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceDetails(val *PriceDetails) *NullablePriceDetails {
	return &NullablePriceDetails{value: val, isSet: true}
}

func (v NullablePriceDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


