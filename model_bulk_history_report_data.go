/*
Chapar Customer API

API for interacting with the Chapar shipping service. All POST requests use a unique `multipart/form-data` structure where the main payload is a JSON string inside a form field named `input`.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the BulkHistoryReportData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkHistoryReportData{}

// BulkHistoryReportData struct for BulkHistoryReportData
type BulkHistoryReportData struct {
	History []BulkHistoryEvent `json:"history,omitempty"`
}

// NewBulkHistoryReportData instantiates a new BulkHistoryReportData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkHistoryReportData() *BulkHistoryReportData {
	this := BulkHistoryReportData{}
	return &this
}

// NewBulkHistoryReportDataWithDefaults instantiates a new BulkHistoryReportData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkHistoryReportDataWithDefaults() *BulkHistoryReportData {
	this := BulkHistoryReportData{}
	return &this
}

// GetHistory returns the History field value if set, zero value otherwise.
func (o *BulkHistoryReportData) GetHistory() []BulkHistoryEvent {
	if o == nil || IsNil(o.History) {
		var ret []BulkHistoryEvent
		return ret
	}
	return o.History
}

// GetHistoryOk returns a tuple with the History field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkHistoryReportData) GetHistoryOk() ([]BulkHistoryEvent, bool) {
	if o == nil || IsNil(o.History) {
		return nil, false
	}
	return o.History, true
}

// HasHistory returns a boolean if a field has been set.
func (o *BulkHistoryReportData) HasHistory() bool {
	if o != nil && !IsNil(o.History) {
		return true
	}

	return false
}

// SetHistory gets a reference to the given []BulkHistoryEvent and assigns it to the History field.
func (o *BulkHistoryReportData) SetHistory(v []BulkHistoryEvent) {
	o.History = v
}

func (o BulkHistoryReportData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkHistoryReportData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.History) {
		toSerialize["history"] = o.History
	}
	return toSerialize, nil
}

type NullableBulkHistoryReportData struct {
	value *BulkHistoryReportData
	isSet bool
}

func (v NullableBulkHistoryReportData) Get() *BulkHistoryReportData {
	return v.value
}

func (v *NullableBulkHistoryReportData) Set(val *BulkHistoryReportData) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkHistoryReportData) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkHistoryReportData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkHistoryReportData(val *BulkHistoryReportData) *NullableBulkHistoryReportData {
	return &NullableBulkHistoryReportData{value: val, isSet: true}
}

func (v NullableBulkHistoryReportData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkHistoryReportData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


