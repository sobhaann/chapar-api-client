/*
Chapar Customer API

API for interacting with the Chapar shipping service. All POST requests use a unique `multipart/form-data` structure where the main payload is a JSON string inside a form field named `input`.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BulkHistoryReportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkHistoryReportRequest{}

// BulkHistoryReportRequest The main payload for bulk history report, to be sent as a stringified JSON in the 'input' field.
type BulkHistoryReportRequest struct {
	User User `json:"user"`
	Bulk []string `json:"bulk"`
}

type _BulkHistoryReportRequest BulkHistoryReportRequest

// NewBulkHistoryReportRequest instantiates a new BulkHistoryReportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkHistoryReportRequest(user User, bulk []string) *BulkHistoryReportRequest {
	this := BulkHistoryReportRequest{}
	this.User = user
	this.Bulk = bulk
	return &this
}

// NewBulkHistoryReportRequestWithDefaults instantiates a new BulkHistoryReportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkHistoryReportRequestWithDefaults() *BulkHistoryReportRequest {
	this := BulkHistoryReportRequest{}
	return &this
}

// GetUser returns the User field value
func (o *BulkHistoryReportRequest) GetUser() User {
	if o == nil {
		var ret User
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *BulkHistoryReportRequest) GetUserOk() (*User, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *BulkHistoryReportRequest) SetUser(v User) {
	o.User = v
}

// GetBulk returns the Bulk field value
func (o *BulkHistoryReportRequest) GetBulk() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Bulk
}

// GetBulkOk returns a tuple with the Bulk field value
// and a boolean to check if the value has been set.
func (o *BulkHistoryReportRequest) GetBulkOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bulk, true
}

// SetBulk sets field value
func (o *BulkHistoryReportRequest) SetBulk(v []string) {
	o.Bulk = v
}

func (o BulkHistoryReportRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkHistoryReportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user"] = o.User
	toSerialize["bulk"] = o.Bulk
	return toSerialize, nil
}

func (o *BulkHistoryReportRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user",
		"bulk",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkHistoryReportRequest := _BulkHistoryReportRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBulkHistoryReportRequest)

	if err != nil {
		return err
	}

	*o = BulkHistoryReportRequest(varBulkHistoryReportRequest)

	return err
}

type NullableBulkHistoryReportRequest struct {
	value *BulkHistoryReportRequest
	isSet bool
}

func (v NullableBulkHistoryReportRequest) Get() *BulkHistoryReportRequest {
	return v.value
}

func (v *NullableBulkHistoryReportRequest) Set(val *BulkHistoryReportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkHistoryReportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkHistoryReportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkHistoryReportRequest(val *BulkHistoryReportRequest) *NullableBulkHistoryReportRequest {
	return &NullableBulkHistoryReportRequest{value: val, isSet: true}
}

func (v NullableBulkHistoryReportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkHistoryReportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


