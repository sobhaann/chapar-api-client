/*
Chapar Customer API

API for interacting with the Chapar shipping service. All POST requests use a unique `multipart/form-data` structure where the main payload is a JSON string inside a form field named `input`.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the TrackingRequestInputOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackingRequestInputOrder{}

// TrackingRequestInputOrder struct for TrackingRequestInputOrder
type TrackingRequestInputOrder struct {
	Reference []string `json:"reference,omitempty"`
	Lang *string `json:"lang,omitempty"`
}

// NewTrackingRequestInputOrder instantiates a new TrackingRequestInputOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackingRequestInputOrder() *TrackingRequestInputOrder {
	this := TrackingRequestInputOrder{}
	return &this
}

// NewTrackingRequestInputOrderWithDefaults instantiates a new TrackingRequestInputOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackingRequestInputOrderWithDefaults() *TrackingRequestInputOrder {
	this := TrackingRequestInputOrder{}
	return &this
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *TrackingRequestInputOrder) GetReference() []string {
	if o == nil || IsNil(o.Reference) {
		var ret []string
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingRequestInputOrder) GetReferenceOk() ([]string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *TrackingRequestInputOrder) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given []string and assigns it to the Reference field.
func (o *TrackingRequestInputOrder) SetReference(v []string) {
	o.Reference = v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *TrackingRequestInputOrder) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingRequestInputOrder) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *TrackingRequestInputOrder) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *TrackingRequestInputOrder) SetLang(v string) {
	o.Lang = &v
}

func (o TrackingRequestInputOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackingRequestInputOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	return toSerialize, nil
}

type NullableTrackingRequestInputOrder struct {
	value *TrackingRequestInputOrder
	isSet bool
}

func (v NullableTrackingRequestInputOrder) Get() *TrackingRequestInputOrder {
	return v.value
}

func (v *NullableTrackingRequestInputOrder) Set(val *TrackingRequestInputOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackingRequestInputOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackingRequestInputOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackingRequestInputOrder(val *TrackingRequestInputOrder) *NullableTrackingRequestInputOrder {
	return &NullableTrackingRequestInputOrder{value: val, isSet: true}
}

func (v NullableTrackingRequestInputOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackingRequestInputOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


