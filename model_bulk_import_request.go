/*
Chapar Customer API

API for interacting with the Chapar shipping service. All requests are sent with a single query parameter `input` which contains a URL-encoded JSON string payload.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the BulkImportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkImportRequest{}

// BulkImportRequest struct for BulkImportRequest
type BulkImportRequest struct {
	User *User `json:"user,omitempty"`
	Bulk []BulkItem `json:"bulk,omitempty"`
}

// NewBulkImportRequest instantiates a new BulkImportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkImportRequest() *BulkImportRequest {
	this := BulkImportRequest{}
	return &this
}

// NewBulkImportRequestWithDefaults instantiates a new BulkImportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkImportRequestWithDefaults() *BulkImportRequest {
	this := BulkImportRequest{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *BulkImportRequest) GetUser() User {
	if o == nil || IsNil(o.User) {
		var ret User
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkImportRequest) GetUserOk() (*User, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *BulkImportRequest) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given User and assigns it to the User field.
func (o *BulkImportRequest) SetUser(v User) {
	o.User = &v
}

// GetBulk returns the Bulk field value if set, zero value otherwise.
func (o *BulkImportRequest) GetBulk() []BulkItem {
	if o == nil || IsNil(o.Bulk) {
		var ret []BulkItem
		return ret
	}
	return o.Bulk
}

// GetBulkOk returns a tuple with the Bulk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkImportRequest) GetBulkOk() ([]BulkItem, bool) {
	if o == nil || IsNil(o.Bulk) {
		return nil, false
	}
	return o.Bulk, true
}

// HasBulk returns a boolean if a field has been set.
func (o *BulkImportRequest) HasBulk() bool {
	if o != nil && !IsNil(o.Bulk) {
		return true
	}

	return false
}

// SetBulk gets a reference to the given []BulkItem and assigns it to the Bulk field.
func (o *BulkImportRequest) SetBulk(v []BulkItem) {
	o.Bulk = v
}

func (o BulkImportRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkImportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Bulk) {
		toSerialize["bulk"] = o.Bulk
	}
	return toSerialize, nil
}

type NullableBulkImportRequest struct {
	value *BulkImportRequest
	isSet bool
}

func (v NullableBulkImportRequest) Get() *BulkImportRequest {
	return v.value
}

func (v *NullableBulkImportRequest) Set(val *BulkImportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkImportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkImportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkImportRequest(val *BulkImportRequest) *NullableBulkImportRequest {
	return &NullableBulkImportRequest{value: val, isSet: true}
}

func (v NullableBulkImportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkImportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


