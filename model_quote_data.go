/*
Chapar Customer API

API for interacting with the Chapar shipping service. All POST requests use a unique `multipart/form-data` structure where the main payload is a JSON string inside a form field named `input`.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the QuoteData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteData{}

// QuoteData struct for QuoteData
type QuoteData struct {
	Price *int32 `json:"price,omitempty"`
	Deadline *string `json:"deadline,omitempty"`
}

// NewQuoteData instantiates a new QuoteData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteData() *QuoteData {
	this := QuoteData{}
	return &this
}

// NewQuoteDataWithDefaults instantiates a new QuoteData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteDataWithDefaults() *QuoteData {
	this := QuoteData{}
	return &this
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *QuoteData) GetPrice() int32 {
	if o == nil || IsNil(o.Price) {
		var ret int32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteData) GetPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *QuoteData) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int32 and assigns it to the Price field.
func (o *QuoteData) SetPrice(v int32) {
	o.Price = &v
}

// GetDeadline returns the Deadline field value if set, zero value otherwise.
func (o *QuoteData) GetDeadline() string {
	if o == nil || IsNil(o.Deadline) {
		var ret string
		return ret
	}
	return *o.Deadline
}

// GetDeadlineOk returns a tuple with the Deadline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteData) GetDeadlineOk() (*string, bool) {
	if o == nil || IsNil(o.Deadline) {
		return nil, false
	}
	return o.Deadline, true
}

// HasDeadline returns a boolean if a field has been set.
func (o *QuoteData) HasDeadline() bool {
	if o != nil && !IsNil(o.Deadline) {
		return true
	}

	return false
}

// SetDeadline gets a reference to the given string and assigns it to the Deadline field.
func (o *QuoteData) SetDeadline(v string) {
	o.Deadline = &v
}

func (o QuoteData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Deadline) {
		toSerialize["deadline"] = o.Deadline
	}
	return toSerialize, nil
}

type NullableQuoteData struct {
	value *QuoteData
	isSet bool
}

func (v NullableQuoteData) Get() *QuoteData {
	return v.value
}

func (v *NullableQuoteData) Set(val *QuoteData) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteData) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteData(val *QuoteData) *NullableQuoteData {
	return &NullableQuoteData{value: val, isSet: true}
}

func (v NullableQuoteData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


