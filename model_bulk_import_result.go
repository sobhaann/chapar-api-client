/*
Chapar Customer API

API for interacting with the Chapar shipping service. All requests are sent with a single query parameter `input` which contains a URL-encoded JSON string payload.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the BulkImportResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkImportResult{}

// BulkImportResult struct for BulkImportResult
type BulkImportResult struct {
	Tracking *string `json:"tracking,omitempty"`
	Reference *int32 `json:"reference,omitempty"`
	Status *bool `json:"status,omitempty"`
	Error *string `json:"error,omitempty"`
}

// NewBulkImportResult instantiates a new BulkImportResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkImportResult() *BulkImportResult {
	this := BulkImportResult{}
	return &this
}

// NewBulkImportResultWithDefaults instantiates a new BulkImportResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkImportResultWithDefaults() *BulkImportResult {
	this := BulkImportResult{}
	return &this
}

// GetTracking returns the Tracking field value if set, zero value otherwise.
func (o *BulkImportResult) GetTracking() string {
	if o == nil || IsNil(o.Tracking) {
		var ret string
		return ret
	}
	return *o.Tracking
}

// GetTrackingOk returns a tuple with the Tracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkImportResult) GetTrackingOk() (*string, bool) {
	if o == nil || IsNil(o.Tracking) {
		return nil, false
	}
	return o.Tracking, true
}

// HasTracking returns a boolean if a field has been set.
func (o *BulkImportResult) HasTracking() bool {
	if o != nil && !IsNil(o.Tracking) {
		return true
	}

	return false
}

// SetTracking gets a reference to the given string and assigns it to the Tracking field.
func (o *BulkImportResult) SetTracking(v string) {
	o.Tracking = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *BulkImportResult) GetReference() int32 {
	if o == nil || IsNil(o.Reference) {
		var ret int32
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkImportResult) GetReferenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *BulkImportResult) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given int32 and assigns it to the Reference field.
func (o *BulkImportResult) SetReference(v int32) {
	o.Reference = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BulkImportResult) GetStatus() bool {
	if o == nil || IsNil(o.Status) {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkImportResult) GetStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BulkImportResult) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *BulkImportResult) SetStatus(v bool) {
	o.Status = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *BulkImportResult) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkImportResult) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *BulkImportResult) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *BulkImportResult) SetError(v string) {
	o.Error = &v
}

func (o BulkImportResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkImportResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tracking) {
		toSerialize["tracking"] = o.Tracking
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableBulkImportResult struct {
	value *BulkImportResult
	isSet bool
}

func (v NullableBulkImportResult) Get() *BulkImportResult {
	return v.value
}

func (v *NullableBulkImportResult) Set(val *BulkImportResult) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkImportResult) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkImportResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkImportResult(val *BulkImportResult) *NullableBulkImportResult {
	return &NullableBulkImportResult{value: val, isSet: true}
}

func (v NullableBulkImportResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkImportResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


