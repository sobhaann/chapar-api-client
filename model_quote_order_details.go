/*
Chapar Customer API

API for interacting with the Chapar shipping service. All POST requests use a unique `multipart/form-data` structure where the main payload is a JSON string inside a form field named `input`.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QuoteOrderDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteOrderDetails{}

// QuoteOrderDetails struct for QuoteOrderDetails
type QuoteOrderDetails struct {
	Quote int32 `json:"quote"`
	Price PriceDetails `json:"price"`
	Currency string `json:"currency"`
	MethodNo int32 `json:"method_no"`
	MethodName string `json:"method_name"`
}

type _QuoteOrderDetails QuoteOrderDetails

// NewQuoteOrderDetails instantiates a new QuoteOrderDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteOrderDetails(quote int32, price PriceDetails, currency string, methodNo int32, methodName string) *QuoteOrderDetails {
	this := QuoteOrderDetails{}
	this.Quote = quote
	this.Price = price
	this.Currency = currency
	this.MethodNo = methodNo
	this.MethodName = methodName
	return &this
}

// NewQuoteOrderDetailsWithDefaults instantiates a new QuoteOrderDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteOrderDetailsWithDefaults() *QuoteOrderDetails {
	this := QuoteOrderDetails{}
	return &this
}

// GetQuote returns the Quote field value
func (o *QuoteOrderDetails) GetQuote() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quote
}

// GetQuoteOk returns a tuple with the Quote field value
// and a boolean to check if the value has been set.
func (o *QuoteOrderDetails) GetQuoteOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quote, true
}

// SetQuote sets field value
func (o *QuoteOrderDetails) SetQuote(v int32) {
	o.Quote = v
}

// GetPrice returns the Price field value
func (o *QuoteOrderDetails) GetPrice() PriceDetails {
	if o == nil {
		var ret PriceDetails
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *QuoteOrderDetails) GetPriceOk() (*PriceDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *QuoteOrderDetails) SetPrice(v PriceDetails) {
	o.Price = v
}

// GetCurrency returns the Currency field value
func (o *QuoteOrderDetails) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *QuoteOrderDetails) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *QuoteOrderDetails) SetCurrency(v string) {
	o.Currency = v
}

// GetMethodNo returns the MethodNo field value
func (o *QuoteOrderDetails) GetMethodNo() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MethodNo
}

// GetMethodNoOk returns a tuple with the MethodNo field value
// and a boolean to check if the value has been set.
func (o *QuoteOrderDetails) GetMethodNoOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MethodNo, true
}

// SetMethodNo sets field value
func (o *QuoteOrderDetails) SetMethodNo(v int32) {
	o.MethodNo = v
}

// GetMethodName returns the MethodName field value
func (o *QuoteOrderDetails) GetMethodName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MethodName
}

// GetMethodNameOk returns a tuple with the MethodName field value
// and a boolean to check if the value has been set.
func (o *QuoteOrderDetails) GetMethodNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MethodName, true
}

// SetMethodName sets field value
func (o *QuoteOrderDetails) SetMethodName(v string) {
	o.MethodName = v
}

func (o QuoteOrderDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteOrderDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["quote"] = o.Quote
	toSerialize["price"] = o.Price
	toSerialize["currency"] = o.Currency
	toSerialize["method_no"] = o.MethodNo
	toSerialize["method_name"] = o.MethodName
	return toSerialize, nil
}

func (o *QuoteOrderDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"quote",
		"price",
		"currency",
		"method_no",
		"method_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuoteOrderDetails := _QuoteOrderDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQuoteOrderDetails)

	if err != nil {
		return err
	}

	*o = QuoteOrderDetails(varQuoteOrderDetails)

	return err
}

type NullableQuoteOrderDetails struct {
	value *QuoteOrderDetails
	isSet bool
}

func (v NullableQuoteOrderDetails) Get() *QuoteOrderDetails {
	return v.value
}

func (v *NullableQuoteOrderDetails) Set(val *QuoteOrderDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteOrderDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteOrderDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteOrderDetails(val *QuoteOrderDetails) *NullableQuoteOrderDetails {
	return &NullableQuoteOrderDetails{value: val, isSet: true}
}

func (v NullableQuoteOrderDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteOrderDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


