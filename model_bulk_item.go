/*
Chapar Customer API

API for interacting with the Chapar shipping service. All requests are sent with a single query parameter `input` which contains a URL-encoded JSON string payload.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the BulkItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkItem{}

// BulkItem struct for BulkItem
type BulkItem struct {
	Cn *BulkConsignmentNote `json:"cn,omitempty"`
	Receiver *Contact `json:"receiver,omitempty"`
	Sender *Contact `json:"sender,omitempty"`
}

// NewBulkItem instantiates a new BulkItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkItem() *BulkItem {
	this := BulkItem{}
	return &this
}

// NewBulkItemWithDefaults instantiates a new BulkItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkItemWithDefaults() *BulkItem {
	this := BulkItem{}
	return &this
}

// GetCn returns the Cn field value if set, zero value otherwise.
func (o *BulkItem) GetCn() BulkConsignmentNote {
	if o == nil || IsNil(o.Cn) {
		var ret BulkConsignmentNote
		return ret
	}
	return *o.Cn
}

// GetCnOk returns a tuple with the Cn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkItem) GetCnOk() (*BulkConsignmentNote, bool) {
	if o == nil || IsNil(o.Cn) {
		return nil, false
	}
	return o.Cn, true
}

// HasCn returns a boolean if a field has been set.
func (o *BulkItem) HasCn() bool {
	if o != nil && !IsNil(o.Cn) {
		return true
	}

	return false
}

// SetCn gets a reference to the given BulkConsignmentNote and assigns it to the Cn field.
func (o *BulkItem) SetCn(v BulkConsignmentNote) {
	o.Cn = &v
}

// GetReceiver returns the Receiver field value if set, zero value otherwise.
func (o *BulkItem) GetReceiver() Contact {
	if o == nil || IsNil(o.Receiver) {
		var ret Contact
		return ret
	}
	return *o.Receiver
}

// GetReceiverOk returns a tuple with the Receiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkItem) GetReceiverOk() (*Contact, bool) {
	if o == nil || IsNil(o.Receiver) {
		return nil, false
	}
	return o.Receiver, true
}

// HasReceiver returns a boolean if a field has been set.
func (o *BulkItem) HasReceiver() bool {
	if o != nil && !IsNil(o.Receiver) {
		return true
	}

	return false
}

// SetReceiver gets a reference to the given Contact and assigns it to the Receiver field.
func (o *BulkItem) SetReceiver(v Contact) {
	o.Receiver = &v
}

// GetSender returns the Sender field value if set, zero value otherwise.
func (o *BulkItem) GetSender() Contact {
	if o == nil || IsNil(o.Sender) {
		var ret Contact
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkItem) GetSenderOk() (*Contact, bool) {
	if o == nil || IsNil(o.Sender) {
		return nil, false
	}
	return o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *BulkItem) HasSender() bool {
	if o != nil && !IsNil(o.Sender) {
		return true
	}

	return false
}

// SetSender gets a reference to the given Contact and assigns it to the Sender field.
func (o *BulkItem) SetSender(v Contact) {
	o.Sender = &v
}

func (o BulkItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cn) {
		toSerialize["cn"] = o.Cn
	}
	if !IsNil(o.Receiver) {
		toSerialize["receiver"] = o.Receiver
	}
	if !IsNil(o.Sender) {
		toSerialize["sender"] = o.Sender
	}
	return toSerialize, nil
}

type NullableBulkItem struct {
	value *BulkItem
	isSet bool
}

func (v NullableBulkItem) Get() *BulkItem {
	return v.value
}

func (v *NullableBulkItem) Set(val *BulkItem) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkItem) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkItem(val *BulkItem) *NullableBulkItem {
	return &NullableBulkItem{value: val, isSet: true}
}

func (v NullableBulkItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


