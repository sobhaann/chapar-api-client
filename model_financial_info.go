/*
Chapar Customer API

API for interacting with the Chapar shipping service. Note the unique request format: POST requests use a multipart/form-data body with a single field named \"input\" that contains a stringified JSON payload.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the FinancialInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FinancialInfo{}

// FinancialInfo struct for FinancialInfo
type FinancialInfo struct {
	DeliveryCharge *string `json:"delivery_charge,omitempty"`
	InsuranceCharge *string `json:"insurance_charge,omitempty"`
	VatCharge *string `json:"vat_charge,omitempty"`
	PackCharge *string `json:"pack_charge,omitempty"`
	ExtraCharge *string `json:"extra_charge,omitempty"`
	CodValue *float32 `json:"cod_value,omitempty"`
	TotalCharge *float32 `json:"total_charge,omitempty"`
}

// NewFinancialInfo instantiates a new FinancialInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinancialInfo() *FinancialInfo {
	this := FinancialInfo{}
	return &this
}

// NewFinancialInfoWithDefaults instantiates a new FinancialInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinancialInfoWithDefaults() *FinancialInfo {
	this := FinancialInfo{}
	return &this
}

// GetDeliveryCharge returns the DeliveryCharge field value if set, zero value otherwise.
func (o *FinancialInfo) GetDeliveryCharge() string {
	if o == nil || IsNil(o.DeliveryCharge) {
		var ret string
		return ret
	}
	return *o.DeliveryCharge
}

// GetDeliveryChargeOk returns a tuple with the DeliveryCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialInfo) GetDeliveryChargeOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryCharge) {
		return nil, false
	}
	return o.DeliveryCharge, true
}

// HasDeliveryCharge returns a boolean if a field has been set.
func (o *FinancialInfo) HasDeliveryCharge() bool {
	if o != nil && !IsNil(o.DeliveryCharge) {
		return true
	}

	return false
}

// SetDeliveryCharge gets a reference to the given string and assigns it to the DeliveryCharge field.
func (o *FinancialInfo) SetDeliveryCharge(v string) {
	o.DeliveryCharge = &v
}

// GetInsuranceCharge returns the InsuranceCharge field value if set, zero value otherwise.
func (o *FinancialInfo) GetInsuranceCharge() string {
	if o == nil || IsNil(o.InsuranceCharge) {
		var ret string
		return ret
	}
	return *o.InsuranceCharge
}

// GetInsuranceChargeOk returns a tuple with the InsuranceCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialInfo) GetInsuranceChargeOk() (*string, bool) {
	if o == nil || IsNil(o.InsuranceCharge) {
		return nil, false
	}
	return o.InsuranceCharge, true
}

// HasInsuranceCharge returns a boolean if a field has been set.
func (o *FinancialInfo) HasInsuranceCharge() bool {
	if o != nil && !IsNil(o.InsuranceCharge) {
		return true
	}

	return false
}

// SetInsuranceCharge gets a reference to the given string and assigns it to the InsuranceCharge field.
func (o *FinancialInfo) SetInsuranceCharge(v string) {
	o.InsuranceCharge = &v
}

// GetVatCharge returns the VatCharge field value if set, zero value otherwise.
func (o *FinancialInfo) GetVatCharge() string {
	if o == nil || IsNil(o.VatCharge) {
		var ret string
		return ret
	}
	return *o.VatCharge
}

// GetVatChargeOk returns a tuple with the VatCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialInfo) GetVatChargeOk() (*string, bool) {
	if o == nil || IsNil(o.VatCharge) {
		return nil, false
	}
	return o.VatCharge, true
}

// HasVatCharge returns a boolean if a field has been set.
func (o *FinancialInfo) HasVatCharge() bool {
	if o != nil && !IsNil(o.VatCharge) {
		return true
	}

	return false
}

// SetVatCharge gets a reference to the given string and assigns it to the VatCharge field.
func (o *FinancialInfo) SetVatCharge(v string) {
	o.VatCharge = &v
}

// GetPackCharge returns the PackCharge field value if set, zero value otherwise.
func (o *FinancialInfo) GetPackCharge() string {
	if o == nil || IsNil(o.PackCharge) {
		var ret string
		return ret
	}
	return *o.PackCharge
}

// GetPackChargeOk returns a tuple with the PackCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialInfo) GetPackChargeOk() (*string, bool) {
	if o == nil || IsNil(o.PackCharge) {
		return nil, false
	}
	return o.PackCharge, true
}

// HasPackCharge returns a boolean if a field has been set.
func (o *FinancialInfo) HasPackCharge() bool {
	if o != nil && !IsNil(o.PackCharge) {
		return true
	}

	return false
}

// SetPackCharge gets a reference to the given string and assigns it to the PackCharge field.
func (o *FinancialInfo) SetPackCharge(v string) {
	o.PackCharge = &v
}

// GetExtraCharge returns the ExtraCharge field value if set, zero value otherwise.
func (o *FinancialInfo) GetExtraCharge() string {
	if o == nil || IsNil(o.ExtraCharge) {
		var ret string
		return ret
	}
	return *o.ExtraCharge
}

// GetExtraChargeOk returns a tuple with the ExtraCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialInfo) GetExtraChargeOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraCharge) {
		return nil, false
	}
	return o.ExtraCharge, true
}

// HasExtraCharge returns a boolean if a field has been set.
func (o *FinancialInfo) HasExtraCharge() bool {
	if o != nil && !IsNil(o.ExtraCharge) {
		return true
	}

	return false
}

// SetExtraCharge gets a reference to the given string and assigns it to the ExtraCharge field.
func (o *FinancialInfo) SetExtraCharge(v string) {
	o.ExtraCharge = &v
}

// GetCodValue returns the CodValue field value if set, zero value otherwise.
func (o *FinancialInfo) GetCodValue() float32 {
	if o == nil || IsNil(o.CodValue) {
		var ret float32
		return ret
	}
	return *o.CodValue
}

// GetCodValueOk returns a tuple with the CodValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialInfo) GetCodValueOk() (*float32, bool) {
	if o == nil || IsNil(o.CodValue) {
		return nil, false
	}
	return o.CodValue, true
}

// HasCodValue returns a boolean if a field has been set.
func (o *FinancialInfo) HasCodValue() bool {
	if o != nil && !IsNil(o.CodValue) {
		return true
	}

	return false
}

// SetCodValue gets a reference to the given float32 and assigns it to the CodValue field.
func (o *FinancialInfo) SetCodValue(v float32) {
	o.CodValue = &v
}

// GetTotalCharge returns the TotalCharge field value if set, zero value otherwise.
func (o *FinancialInfo) GetTotalCharge() float32 {
	if o == nil || IsNil(o.TotalCharge) {
		var ret float32
		return ret
	}
	return *o.TotalCharge
}

// GetTotalChargeOk returns a tuple with the TotalCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialInfo) GetTotalChargeOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalCharge) {
		return nil, false
	}
	return o.TotalCharge, true
}

// HasTotalCharge returns a boolean if a field has been set.
func (o *FinancialInfo) HasTotalCharge() bool {
	if o != nil && !IsNil(o.TotalCharge) {
		return true
	}

	return false
}

// SetTotalCharge gets a reference to the given float32 and assigns it to the TotalCharge field.
func (o *FinancialInfo) SetTotalCharge(v float32) {
	o.TotalCharge = &v
}

func (o FinancialInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FinancialInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeliveryCharge) {
		toSerialize["delivery_charge"] = o.DeliveryCharge
	}
	if !IsNil(o.InsuranceCharge) {
		toSerialize["insurance_charge"] = o.InsuranceCharge
	}
	if !IsNil(o.VatCharge) {
		toSerialize["vat_charge"] = o.VatCharge
	}
	if !IsNil(o.PackCharge) {
		toSerialize["pack_charge"] = o.PackCharge
	}
	if !IsNil(o.ExtraCharge) {
		toSerialize["extra_charge"] = o.ExtraCharge
	}
	if !IsNil(o.CodValue) {
		toSerialize["cod_value"] = o.CodValue
	}
	if !IsNil(o.TotalCharge) {
		toSerialize["total_charge"] = o.TotalCharge
	}
	return toSerialize, nil
}

type NullableFinancialInfo struct {
	value *FinancialInfo
	isSet bool
}

func (v NullableFinancialInfo) Get() *FinancialInfo {
	return v.value
}

func (v *NullableFinancialInfo) Set(val *FinancialInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableFinancialInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableFinancialInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinancialInfo(val *FinancialInfo) *NullableFinancialInfo {
	return &NullableFinancialInfo{value: val, isSet: true}
}

func (v NullableFinancialInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinancialInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


