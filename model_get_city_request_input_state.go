/*
Chapar Customer API

API for interacting with the Chapar shipping service. All POST requests use a unique `multipart/form-data` structure where the main payload is a JSON string inside a form field named `input`.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the GetCityRequestInputState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCityRequestInputState{}

// GetCityRequestInputState struct for GetCityRequestInputState
type GetCityRequestInputState struct {
	False *int32 `json:"false,omitempty"`
}

// NewGetCityRequestInputState instantiates a new GetCityRequestInputState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCityRequestInputState() *GetCityRequestInputState {
	this := GetCityRequestInputState{}
	return &this
}

// NewGetCityRequestInputStateWithDefaults instantiates a new GetCityRequestInputState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCityRequestInputStateWithDefaults() *GetCityRequestInputState {
	this := GetCityRequestInputState{}
	return &this
}

// GetFalse returns the False field value if set, zero value otherwise.
func (o *GetCityRequestInputState) GetFalse() int32 {
	if o == nil || IsNil(o.False) {
		var ret int32
		return ret
	}
	return *o.False
}

// GetFalseOk returns a tuple with the False field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCityRequestInputState) GetFalseOk() (*int32, bool) {
	if o == nil || IsNil(o.False) {
		return nil, false
	}
	return o.False, true
}

// HasFalse returns a boolean if a field has been set.
func (o *GetCityRequestInputState) HasFalse() bool {
	if o != nil && !IsNil(o.False) {
		return true
	}

	return false
}

// SetFalse gets a reference to the given int32 and assigns it to the False field.
func (o *GetCityRequestInputState) SetFalse(v int32) {
	o.False = &v
}

func (o GetCityRequestInputState) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCityRequestInputState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.False) {
		toSerialize["false"] = o.False
	}
	return toSerialize, nil
}

type NullableGetCityRequestInputState struct {
	value *GetCityRequestInputState
	isSet bool
}

func (v NullableGetCityRequestInputState) Get() *GetCityRequestInputState {
	return v.value
}

func (v *NullableGetCityRequestInputState) Set(val *GetCityRequestInputState) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCityRequestInputState) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCityRequestInputState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCityRequestInputState(val *GetCityRequestInputState) *NullableGetCityRequestInputState {
	return &NullableGetCityRequestInputState{value: val, isSet: true}
}

func (v NullableGetCityRequestInputState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCityRequestInputState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


