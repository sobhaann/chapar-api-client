/*
Chapar Customer API

API for interacting with the Chapar shipping service. Note the unique request format: POST requests use a multipart/form-data body with a single field named \"input\" that contains a stringified JSON payload.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the TrackingObjectsOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackingObjectsOrder{}

// TrackingObjectsOrder struct for TrackingObjectsOrder
type TrackingObjectsOrder struct {
	DeliveredTo NullableString `json:"delivered_to,omitempty"`
	DeliveryTime NullableString `json:"delivery_time,omitempty"`
	Signature NullableString `json:"signature,omitempty"`
	Geo *TrackingObjectsOrderGeo `json:"geo,omitempty"`
	History []TrackingHistoryItem `json:"history,omitempty"`
	Origin NullableString `json:"origin,omitempty"`
	Dest NullableString `json:"dest,omitempty"`
	PickupAgentCode NullableString `json:"pickup_agent_code,omitempty"`
	PickupAgent NullableString `json:"pickup_agent,omitempty"`
	PickupAgentPhone NullableString `json:"pickup_agent_phone,omitempty"`
	DeliveryAgentCode NullableString `json:"delivery_agent_code,omitempty"`
	DeliveryAgent NullableString `json:"delivery_agent,omitempty"`
	DeliveryAgentPhone NullableString `json:"delivery_agent_phone,omitempty"`
	SenderCode NullableString `json:"sender_code,omitempty"`
	SenderCompany NullableString `json:"sender_company,omitempty"`
	SenderContact NullableString `json:"sender_contact,omitempty"`
	SenderPhone NullableString `json:"sender_phone,omitempty"`
	ReceiverCompany NullableString `json:"receiver_company,omitempty"`
	ReceiverContact NullableString `json:"receiver_contact,omitempty"`
	ReceiverPhone NullableString `json:"receiver_phone,omitempty"`
	ThirdReference NullableString `json:"third_reference,omitempty"`
	Method NullableString `json:"method,omitempty"`
}

// NewTrackingObjectsOrder instantiates a new TrackingObjectsOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackingObjectsOrder() *TrackingObjectsOrder {
	this := TrackingObjectsOrder{}
	return &this
}

// NewTrackingObjectsOrderWithDefaults instantiates a new TrackingObjectsOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackingObjectsOrderWithDefaults() *TrackingObjectsOrder {
	this := TrackingObjectsOrder{}
	return &this
}

// GetDeliveredTo returns the DeliveredTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetDeliveredTo() string {
	if o == nil || IsNil(o.DeliveredTo.Get()) {
		var ret string
		return ret
	}
	return *o.DeliveredTo.Get()
}

// GetDeliveredToOk returns a tuple with the DeliveredTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetDeliveredToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveredTo.Get(), o.DeliveredTo.IsSet()
}

// HasDeliveredTo returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasDeliveredTo() bool {
	if o != nil && o.DeliveredTo.IsSet() {
		return true
	}

	return false
}

// SetDeliveredTo gets a reference to the given NullableString and assigns it to the DeliveredTo field.
func (o *TrackingObjectsOrder) SetDeliveredTo(v string) {
	o.DeliveredTo.Set(&v)
}
// SetDeliveredToNil sets the value for DeliveredTo to be an explicit nil
func (o *TrackingObjectsOrder) SetDeliveredToNil() {
	o.DeliveredTo.Set(nil)
}

// UnsetDeliveredTo ensures that no value is present for DeliveredTo, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetDeliveredTo() {
	o.DeliveredTo.Unset()
}

// GetDeliveryTime returns the DeliveryTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetDeliveryTime() string {
	if o == nil || IsNil(o.DeliveryTime.Get()) {
		var ret string
		return ret
	}
	return *o.DeliveryTime.Get()
}

// GetDeliveryTimeOk returns a tuple with the DeliveryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetDeliveryTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryTime.Get(), o.DeliveryTime.IsSet()
}

// HasDeliveryTime returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasDeliveryTime() bool {
	if o != nil && o.DeliveryTime.IsSet() {
		return true
	}

	return false
}

// SetDeliveryTime gets a reference to the given NullableString and assigns it to the DeliveryTime field.
func (o *TrackingObjectsOrder) SetDeliveryTime(v string) {
	o.DeliveryTime.Set(&v)
}
// SetDeliveryTimeNil sets the value for DeliveryTime to be an explicit nil
func (o *TrackingObjectsOrder) SetDeliveryTimeNil() {
	o.DeliveryTime.Set(nil)
}

// UnsetDeliveryTime ensures that no value is present for DeliveryTime, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetDeliveryTime() {
	o.DeliveryTime.Unset()
}

// GetSignature returns the Signature field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetSignature() string {
	if o == nil || IsNil(o.Signature.Get()) {
		var ret string
		return ret
	}
	return *o.Signature.Get()
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Signature.Get(), o.Signature.IsSet()
}

// HasSignature returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasSignature() bool {
	if o != nil && o.Signature.IsSet() {
		return true
	}

	return false
}

// SetSignature gets a reference to the given NullableString and assigns it to the Signature field.
func (o *TrackingObjectsOrder) SetSignature(v string) {
	o.Signature.Set(&v)
}
// SetSignatureNil sets the value for Signature to be an explicit nil
func (o *TrackingObjectsOrder) SetSignatureNil() {
	o.Signature.Set(nil)
}

// UnsetSignature ensures that no value is present for Signature, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetSignature() {
	o.Signature.Unset()
}

// GetGeo returns the Geo field value if set, zero value otherwise.
func (o *TrackingObjectsOrder) GetGeo() TrackingObjectsOrderGeo {
	if o == nil || IsNil(o.Geo) {
		var ret TrackingObjectsOrderGeo
		return ret
	}
	return *o.Geo
}

// GetGeoOk returns a tuple with the Geo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingObjectsOrder) GetGeoOk() (*TrackingObjectsOrderGeo, bool) {
	if o == nil || IsNil(o.Geo) {
		return nil, false
	}
	return o.Geo, true
}

// HasGeo returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasGeo() bool {
	if o != nil && !IsNil(o.Geo) {
		return true
	}

	return false
}

// SetGeo gets a reference to the given TrackingObjectsOrderGeo and assigns it to the Geo field.
func (o *TrackingObjectsOrder) SetGeo(v TrackingObjectsOrderGeo) {
	o.Geo = &v
}

// GetHistory returns the History field value if set, zero value otherwise.
func (o *TrackingObjectsOrder) GetHistory() []TrackingHistoryItem {
	if o == nil || IsNil(o.History) {
		var ret []TrackingHistoryItem
		return ret
	}
	return o.History
}

// GetHistoryOk returns a tuple with the History field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingObjectsOrder) GetHistoryOk() ([]TrackingHistoryItem, bool) {
	if o == nil || IsNil(o.History) {
		return nil, false
	}
	return o.History, true
}

// HasHistory returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasHistory() bool {
	if o != nil && !IsNil(o.History) {
		return true
	}

	return false
}

// SetHistory gets a reference to the given []TrackingHistoryItem and assigns it to the History field.
func (o *TrackingObjectsOrder) SetHistory(v []TrackingHistoryItem) {
	o.History = v
}

// GetOrigin returns the Origin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetOrigin() string {
	if o == nil || IsNil(o.Origin.Get()) {
		var ret string
		return ret
	}
	return *o.Origin.Get()
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetOriginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Origin.Get(), o.Origin.IsSet()
}

// HasOrigin returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasOrigin() bool {
	if o != nil && o.Origin.IsSet() {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given NullableString and assigns it to the Origin field.
func (o *TrackingObjectsOrder) SetOrigin(v string) {
	o.Origin.Set(&v)
}
// SetOriginNil sets the value for Origin to be an explicit nil
func (o *TrackingObjectsOrder) SetOriginNil() {
	o.Origin.Set(nil)
}

// UnsetOrigin ensures that no value is present for Origin, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetOrigin() {
	o.Origin.Unset()
}

// GetDest returns the Dest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetDest() string {
	if o == nil || IsNil(o.Dest.Get()) {
		var ret string
		return ret
	}
	return *o.Dest.Get()
}

// GetDestOk returns a tuple with the Dest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetDestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dest.Get(), o.Dest.IsSet()
}

// HasDest returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasDest() bool {
	if o != nil && o.Dest.IsSet() {
		return true
	}

	return false
}

// SetDest gets a reference to the given NullableString and assigns it to the Dest field.
func (o *TrackingObjectsOrder) SetDest(v string) {
	o.Dest.Set(&v)
}
// SetDestNil sets the value for Dest to be an explicit nil
func (o *TrackingObjectsOrder) SetDestNil() {
	o.Dest.Set(nil)
}

// UnsetDest ensures that no value is present for Dest, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetDest() {
	o.Dest.Unset()
}

// GetPickupAgentCode returns the PickupAgentCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetPickupAgentCode() string {
	if o == nil || IsNil(o.PickupAgentCode.Get()) {
		var ret string
		return ret
	}
	return *o.PickupAgentCode.Get()
}

// GetPickupAgentCodeOk returns a tuple with the PickupAgentCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetPickupAgentCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PickupAgentCode.Get(), o.PickupAgentCode.IsSet()
}

// HasPickupAgentCode returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasPickupAgentCode() bool {
	if o != nil && o.PickupAgentCode.IsSet() {
		return true
	}

	return false
}

// SetPickupAgentCode gets a reference to the given NullableString and assigns it to the PickupAgentCode field.
func (o *TrackingObjectsOrder) SetPickupAgentCode(v string) {
	o.PickupAgentCode.Set(&v)
}
// SetPickupAgentCodeNil sets the value for PickupAgentCode to be an explicit nil
func (o *TrackingObjectsOrder) SetPickupAgentCodeNil() {
	o.PickupAgentCode.Set(nil)
}

// UnsetPickupAgentCode ensures that no value is present for PickupAgentCode, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetPickupAgentCode() {
	o.PickupAgentCode.Unset()
}

// GetPickupAgent returns the PickupAgent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetPickupAgent() string {
	if o == nil || IsNil(o.PickupAgent.Get()) {
		var ret string
		return ret
	}
	return *o.PickupAgent.Get()
}

// GetPickupAgentOk returns a tuple with the PickupAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetPickupAgentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PickupAgent.Get(), o.PickupAgent.IsSet()
}

// HasPickupAgent returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasPickupAgent() bool {
	if o != nil && o.PickupAgent.IsSet() {
		return true
	}

	return false
}

// SetPickupAgent gets a reference to the given NullableString and assigns it to the PickupAgent field.
func (o *TrackingObjectsOrder) SetPickupAgent(v string) {
	o.PickupAgent.Set(&v)
}
// SetPickupAgentNil sets the value for PickupAgent to be an explicit nil
func (o *TrackingObjectsOrder) SetPickupAgentNil() {
	o.PickupAgent.Set(nil)
}

// UnsetPickupAgent ensures that no value is present for PickupAgent, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetPickupAgent() {
	o.PickupAgent.Unset()
}

// GetPickupAgentPhone returns the PickupAgentPhone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetPickupAgentPhone() string {
	if o == nil || IsNil(o.PickupAgentPhone.Get()) {
		var ret string
		return ret
	}
	return *o.PickupAgentPhone.Get()
}

// GetPickupAgentPhoneOk returns a tuple with the PickupAgentPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetPickupAgentPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PickupAgentPhone.Get(), o.PickupAgentPhone.IsSet()
}

// HasPickupAgentPhone returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasPickupAgentPhone() bool {
	if o != nil && o.PickupAgentPhone.IsSet() {
		return true
	}

	return false
}

// SetPickupAgentPhone gets a reference to the given NullableString and assigns it to the PickupAgentPhone field.
func (o *TrackingObjectsOrder) SetPickupAgentPhone(v string) {
	o.PickupAgentPhone.Set(&v)
}
// SetPickupAgentPhoneNil sets the value for PickupAgentPhone to be an explicit nil
func (o *TrackingObjectsOrder) SetPickupAgentPhoneNil() {
	o.PickupAgentPhone.Set(nil)
}

// UnsetPickupAgentPhone ensures that no value is present for PickupAgentPhone, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetPickupAgentPhone() {
	o.PickupAgentPhone.Unset()
}

// GetDeliveryAgentCode returns the DeliveryAgentCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetDeliveryAgentCode() string {
	if o == nil || IsNil(o.DeliveryAgentCode.Get()) {
		var ret string
		return ret
	}
	return *o.DeliveryAgentCode.Get()
}

// GetDeliveryAgentCodeOk returns a tuple with the DeliveryAgentCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetDeliveryAgentCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryAgentCode.Get(), o.DeliveryAgentCode.IsSet()
}

// HasDeliveryAgentCode returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasDeliveryAgentCode() bool {
	if o != nil && o.DeliveryAgentCode.IsSet() {
		return true
	}

	return false
}

// SetDeliveryAgentCode gets a reference to the given NullableString and assigns it to the DeliveryAgentCode field.
func (o *TrackingObjectsOrder) SetDeliveryAgentCode(v string) {
	o.DeliveryAgentCode.Set(&v)
}
// SetDeliveryAgentCodeNil sets the value for DeliveryAgentCode to be an explicit nil
func (o *TrackingObjectsOrder) SetDeliveryAgentCodeNil() {
	o.DeliveryAgentCode.Set(nil)
}

// UnsetDeliveryAgentCode ensures that no value is present for DeliveryAgentCode, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetDeliveryAgentCode() {
	o.DeliveryAgentCode.Unset()
}

// GetDeliveryAgent returns the DeliveryAgent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetDeliveryAgent() string {
	if o == nil || IsNil(o.DeliveryAgent.Get()) {
		var ret string
		return ret
	}
	return *o.DeliveryAgent.Get()
}

// GetDeliveryAgentOk returns a tuple with the DeliveryAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetDeliveryAgentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryAgent.Get(), o.DeliveryAgent.IsSet()
}

// HasDeliveryAgent returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasDeliveryAgent() bool {
	if o != nil && o.DeliveryAgent.IsSet() {
		return true
	}

	return false
}

// SetDeliveryAgent gets a reference to the given NullableString and assigns it to the DeliveryAgent field.
func (o *TrackingObjectsOrder) SetDeliveryAgent(v string) {
	o.DeliveryAgent.Set(&v)
}
// SetDeliveryAgentNil sets the value for DeliveryAgent to be an explicit nil
func (o *TrackingObjectsOrder) SetDeliveryAgentNil() {
	o.DeliveryAgent.Set(nil)
}

// UnsetDeliveryAgent ensures that no value is present for DeliveryAgent, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetDeliveryAgent() {
	o.DeliveryAgent.Unset()
}

// GetDeliveryAgentPhone returns the DeliveryAgentPhone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetDeliveryAgentPhone() string {
	if o == nil || IsNil(o.DeliveryAgentPhone.Get()) {
		var ret string
		return ret
	}
	return *o.DeliveryAgentPhone.Get()
}

// GetDeliveryAgentPhoneOk returns a tuple with the DeliveryAgentPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetDeliveryAgentPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryAgentPhone.Get(), o.DeliveryAgentPhone.IsSet()
}

// HasDeliveryAgentPhone returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasDeliveryAgentPhone() bool {
	if o != nil && o.DeliveryAgentPhone.IsSet() {
		return true
	}

	return false
}

// SetDeliveryAgentPhone gets a reference to the given NullableString and assigns it to the DeliveryAgentPhone field.
func (o *TrackingObjectsOrder) SetDeliveryAgentPhone(v string) {
	o.DeliveryAgentPhone.Set(&v)
}
// SetDeliveryAgentPhoneNil sets the value for DeliveryAgentPhone to be an explicit nil
func (o *TrackingObjectsOrder) SetDeliveryAgentPhoneNil() {
	o.DeliveryAgentPhone.Set(nil)
}

// UnsetDeliveryAgentPhone ensures that no value is present for DeliveryAgentPhone, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetDeliveryAgentPhone() {
	o.DeliveryAgentPhone.Unset()
}

// GetSenderCode returns the SenderCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetSenderCode() string {
	if o == nil || IsNil(o.SenderCode.Get()) {
		var ret string
		return ret
	}
	return *o.SenderCode.Get()
}

// GetSenderCodeOk returns a tuple with the SenderCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetSenderCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SenderCode.Get(), o.SenderCode.IsSet()
}

// HasSenderCode returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasSenderCode() bool {
	if o != nil && o.SenderCode.IsSet() {
		return true
	}

	return false
}

// SetSenderCode gets a reference to the given NullableString and assigns it to the SenderCode field.
func (o *TrackingObjectsOrder) SetSenderCode(v string) {
	o.SenderCode.Set(&v)
}
// SetSenderCodeNil sets the value for SenderCode to be an explicit nil
func (o *TrackingObjectsOrder) SetSenderCodeNil() {
	o.SenderCode.Set(nil)
}

// UnsetSenderCode ensures that no value is present for SenderCode, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetSenderCode() {
	o.SenderCode.Unset()
}

// GetSenderCompany returns the SenderCompany field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetSenderCompany() string {
	if o == nil || IsNil(o.SenderCompany.Get()) {
		var ret string
		return ret
	}
	return *o.SenderCompany.Get()
}

// GetSenderCompanyOk returns a tuple with the SenderCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetSenderCompanyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SenderCompany.Get(), o.SenderCompany.IsSet()
}

// HasSenderCompany returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasSenderCompany() bool {
	if o != nil && o.SenderCompany.IsSet() {
		return true
	}

	return false
}

// SetSenderCompany gets a reference to the given NullableString and assigns it to the SenderCompany field.
func (o *TrackingObjectsOrder) SetSenderCompany(v string) {
	o.SenderCompany.Set(&v)
}
// SetSenderCompanyNil sets the value for SenderCompany to be an explicit nil
func (o *TrackingObjectsOrder) SetSenderCompanyNil() {
	o.SenderCompany.Set(nil)
}

// UnsetSenderCompany ensures that no value is present for SenderCompany, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetSenderCompany() {
	o.SenderCompany.Unset()
}

// GetSenderContact returns the SenderContact field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetSenderContact() string {
	if o == nil || IsNil(o.SenderContact.Get()) {
		var ret string
		return ret
	}
	return *o.SenderContact.Get()
}

// GetSenderContactOk returns a tuple with the SenderContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetSenderContactOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SenderContact.Get(), o.SenderContact.IsSet()
}

// HasSenderContact returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasSenderContact() bool {
	if o != nil && o.SenderContact.IsSet() {
		return true
	}

	return false
}

// SetSenderContact gets a reference to the given NullableString and assigns it to the SenderContact field.
func (o *TrackingObjectsOrder) SetSenderContact(v string) {
	o.SenderContact.Set(&v)
}
// SetSenderContactNil sets the value for SenderContact to be an explicit nil
func (o *TrackingObjectsOrder) SetSenderContactNil() {
	o.SenderContact.Set(nil)
}

// UnsetSenderContact ensures that no value is present for SenderContact, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetSenderContact() {
	o.SenderContact.Unset()
}

// GetSenderPhone returns the SenderPhone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetSenderPhone() string {
	if o == nil || IsNil(o.SenderPhone.Get()) {
		var ret string
		return ret
	}
	return *o.SenderPhone.Get()
}

// GetSenderPhoneOk returns a tuple with the SenderPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetSenderPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SenderPhone.Get(), o.SenderPhone.IsSet()
}

// HasSenderPhone returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasSenderPhone() bool {
	if o != nil && o.SenderPhone.IsSet() {
		return true
	}

	return false
}

// SetSenderPhone gets a reference to the given NullableString and assigns it to the SenderPhone field.
func (o *TrackingObjectsOrder) SetSenderPhone(v string) {
	o.SenderPhone.Set(&v)
}
// SetSenderPhoneNil sets the value for SenderPhone to be an explicit nil
func (o *TrackingObjectsOrder) SetSenderPhoneNil() {
	o.SenderPhone.Set(nil)
}

// UnsetSenderPhone ensures that no value is present for SenderPhone, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetSenderPhone() {
	o.SenderPhone.Unset()
}

// GetReceiverCompany returns the ReceiverCompany field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetReceiverCompany() string {
	if o == nil || IsNil(o.ReceiverCompany.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverCompany.Get()
}

// GetReceiverCompanyOk returns a tuple with the ReceiverCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetReceiverCompanyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverCompany.Get(), o.ReceiverCompany.IsSet()
}

// HasReceiverCompany returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasReceiverCompany() bool {
	if o != nil && o.ReceiverCompany.IsSet() {
		return true
	}

	return false
}

// SetReceiverCompany gets a reference to the given NullableString and assigns it to the ReceiverCompany field.
func (o *TrackingObjectsOrder) SetReceiverCompany(v string) {
	o.ReceiverCompany.Set(&v)
}
// SetReceiverCompanyNil sets the value for ReceiverCompany to be an explicit nil
func (o *TrackingObjectsOrder) SetReceiverCompanyNil() {
	o.ReceiverCompany.Set(nil)
}

// UnsetReceiverCompany ensures that no value is present for ReceiverCompany, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetReceiverCompany() {
	o.ReceiverCompany.Unset()
}

// GetReceiverContact returns the ReceiverContact field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetReceiverContact() string {
	if o == nil || IsNil(o.ReceiverContact.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverContact.Get()
}

// GetReceiverContactOk returns a tuple with the ReceiverContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetReceiverContactOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverContact.Get(), o.ReceiverContact.IsSet()
}

// HasReceiverContact returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasReceiverContact() bool {
	if o != nil && o.ReceiverContact.IsSet() {
		return true
	}

	return false
}

// SetReceiverContact gets a reference to the given NullableString and assigns it to the ReceiverContact field.
func (o *TrackingObjectsOrder) SetReceiverContact(v string) {
	o.ReceiverContact.Set(&v)
}
// SetReceiverContactNil sets the value for ReceiverContact to be an explicit nil
func (o *TrackingObjectsOrder) SetReceiverContactNil() {
	o.ReceiverContact.Set(nil)
}

// UnsetReceiverContact ensures that no value is present for ReceiverContact, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetReceiverContact() {
	o.ReceiverContact.Unset()
}

// GetReceiverPhone returns the ReceiverPhone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetReceiverPhone() string {
	if o == nil || IsNil(o.ReceiverPhone.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiverPhone.Get()
}

// GetReceiverPhoneOk returns a tuple with the ReceiverPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetReceiverPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiverPhone.Get(), o.ReceiverPhone.IsSet()
}

// HasReceiverPhone returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasReceiverPhone() bool {
	if o != nil && o.ReceiverPhone.IsSet() {
		return true
	}

	return false
}

// SetReceiverPhone gets a reference to the given NullableString and assigns it to the ReceiverPhone field.
func (o *TrackingObjectsOrder) SetReceiverPhone(v string) {
	o.ReceiverPhone.Set(&v)
}
// SetReceiverPhoneNil sets the value for ReceiverPhone to be an explicit nil
func (o *TrackingObjectsOrder) SetReceiverPhoneNil() {
	o.ReceiverPhone.Set(nil)
}

// UnsetReceiverPhone ensures that no value is present for ReceiverPhone, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetReceiverPhone() {
	o.ReceiverPhone.Unset()
}

// GetThirdReference returns the ThirdReference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetThirdReference() string {
	if o == nil || IsNil(o.ThirdReference.Get()) {
		var ret string
		return ret
	}
	return *o.ThirdReference.Get()
}

// GetThirdReferenceOk returns a tuple with the ThirdReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetThirdReferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ThirdReference.Get(), o.ThirdReference.IsSet()
}

// HasThirdReference returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasThirdReference() bool {
	if o != nil && o.ThirdReference.IsSet() {
		return true
	}

	return false
}

// SetThirdReference gets a reference to the given NullableString and assigns it to the ThirdReference field.
func (o *TrackingObjectsOrder) SetThirdReference(v string) {
	o.ThirdReference.Set(&v)
}
// SetThirdReferenceNil sets the value for ThirdReference to be an explicit nil
func (o *TrackingObjectsOrder) SetThirdReferenceNil() {
	o.ThirdReference.Set(nil)
}

// UnsetThirdReference ensures that no value is present for ThirdReference, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetThirdReference() {
	o.ThirdReference.Unset()
}

// GetMethod returns the Method field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectsOrder) GetMethod() string {
	if o == nil || IsNil(o.Method.Get()) {
		var ret string
		return ret
	}
	return *o.Method.Get()
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectsOrder) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Method.Get(), o.Method.IsSet()
}

// HasMethod returns a boolean if a field has been set.
func (o *TrackingObjectsOrder) HasMethod() bool {
	if o != nil && o.Method.IsSet() {
		return true
	}

	return false
}

// SetMethod gets a reference to the given NullableString and assigns it to the Method field.
func (o *TrackingObjectsOrder) SetMethod(v string) {
	o.Method.Set(&v)
}
// SetMethodNil sets the value for Method to be an explicit nil
func (o *TrackingObjectsOrder) SetMethodNil() {
	o.Method.Set(nil)
}

// UnsetMethod ensures that no value is present for Method, not even an explicit nil
func (o *TrackingObjectsOrder) UnsetMethod() {
	o.Method.Unset()
}

func (o TrackingObjectsOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackingObjectsOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DeliveredTo.IsSet() {
		toSerialize["delivered_to"] = o.DeliveredTo.Get()
	}
	if o.DeliveryTime.IsSet() {
		toSerialize["delivery_time"] = o.DeliveryTime.Get()
	}
	if o.Signature.IsSet() {
		toSerialize["signature"] = o.Signature.Get()
	}
	if !IsNil(o.Geo) {
		toSerialize["geo"] = o.Geo
	}
	if !IsNil(o.History) {
		toSerialize["history"] = o.History
	}
	if o.Origin.IsSet() {
		toSerialize["origin"] = o.Origin.Get()
	}
	if o.Dest.IsSet() {
		toSerialize["dest"] = o.Dest.Get()
	}
	if o.PickupAgentCode.IsSet() {
		toSerialize["pickup_agent_code"] = o.PickupAgentCode.Get()
	}
	if o.PickupAgent.IsSet() {
		toSerialize["pickup_agent"] = o.PickupAgent.Get()
	}
	if o.PickupAgentPhone.IsSet() {
		toSerialize["pickup_agent_phone"] = o.PickupAgentPhone.Get()
	}
	if o.DeliveryAgentCode.IsSet() {
		toSerialize["delivery_agent_code"] = o.DeliveryAgentCode.Get()
	}
	if o.DeliveryAgent.IsSet() {
		toSerialize["delivery_agent"] = o.DeliveryAgent.Get()
	}
	if o.DeliveryAgentPhone.IsSet() {
		toSerialize["delivery_agent_phone"] = o.DeliveryAgentPhone.Get()
	}
	if o.SenderCode.IsSet() {
		toSerialize["sender_code"] = o.SenderCode.Get()
	}
	if o.SenderCompany.IsSet() {
		toSerialize["sender_company"] = o.SenderCompany.Get()
	}
	if o.SenderContact.IsSet() {
		toSerialize["sender_contact"] = o.SenderContact.Get()
	}
	if o.SenderPhone.IsSet() {
		toSerialize["sender_phone"] = o.SenderPhone.Get()
	}
	if o.ReceiverCompany.IsSet() {
		toSerialize["receiver_company"] = o.ReceiverCompany.Get()
	}
	if o.ReceiverContact.IsSet() {
		toSerialize["receiver_contact"] = o.ReceiverContact.Get()
	}
	if o.ReceiverPhone.IsSet() {
		toSerialize["receiver_phone"] = o.ReceiverPhone.Get()
	}
	if o.ThirdReference.IsSet() {
		toSerialize["third_reference"] = o.ThirdReference.Get()
	}
	if o.Method.IsSet() {
		toSerialize["method"] = o.Method.Get()
	}
	return toSerialize, nil
}

type NullableTrackingObjectsOrder struct {
	value *TrackingObjectsOrder
	isSet bool
}

func (v NullableTrackingObjectsOrder) Get() *TrackingObjectsOrder {
	return v.value
}

func (v *NullableTrackingObjectsOrder) Set(val *TrackingObjectsOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackingObjectsOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackingObjectsOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackingObjectsOrder(val *TrackingObjectsOrder) *NullableTrackingObjectsOrder {
	return &NullableTrackingObjectsOrder{value: val, isSet: true}
}

func (v NullableTrackingObjectsOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackingObjectsOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


