/*
Chapar Customer API

API for interacting with the Chapar shipping service. All requests are sent with a single query parameter `input` which contains a URL-encoded JSON string payload.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the TrackingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackingResponse{}

// TrackingResponse struct for TrackingResponse
type TrackingResponse struct {
	Order *TrackingOrder `json:"order,omitempty"`
}

// NewTrackingResponse instantiates a new TrackingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackingResponse() *TrackingResponse {
	this := TrackingResponse{}
	return &this
}

// NewTrackingResponseWithDefaults instantiates a new TrackingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackingResponseWithDefaults() *TrackingResponse {
	this := TrackingResponse{}
	return &this
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *TrackingResponse) GetOrder() TrackingOrder {
	if o == nil || IsNil(o.Order) {
		var ret TrackingOrder
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingResponse) GetOrderOk() (*TrackingOrder, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *TrackingResponse) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given TrackingOrder and assigns it to the Order field.
func (o *TrackingResponse) SetOrder(v TrackingOrder) {
	o.Order = &v
}

func (o TrackingResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	return toSerialize, nil
}

type NullableTrackingResponse struct {
	value *TrackingResponse
	isSet bool
}

func (v NullableTrackingResponse) Get() *TrackingResponse {
	return v.value
}

func (v *NullableTrackingResponse) Set(val *TrackingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackingResponse(val *TrackingResponse) *NullableTrackingResponse {
	return &NullableTrackingResponse{value: val, isSet: true}
}

func (v NullableTrackingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


