/*
Chapar Customer API

API for interacting with the Chapar shipping service. Note the unique request format: POST requests use a multipart/form-data body with a single field named \"input\" that contains a stringified JSON payload.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the BulkImportObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkImportObject{}

// BulkImportObject struct for BulkImportObject
type BulkImportObject struct {
	Result []BulkImportResultItem `json:"result,omitempty"`
}

// NewBulkImportObject instantiates a new BulkImportObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkImportObject() *BulkImportObject {
	this := BulkImportObject{}
	return &this
}

// NewBulkImportObjectWithDefaults instantiates a new BulkImportObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkImportObjectWithDefaults() *BulkImportObject {
	this := BulkImportObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *BulkImportObject) GetResult() []BulkImportResultItem {
	if o == nil || IsNil(o.Result) {
		var ret []BulkImportResultItem
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkImportObject) GetResultOk() ([]BulkImportResultItem, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *BulkImportObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []BulkImportResultItem and assigns it to the Result field.
func (o *BulkImportObject) SetResult(v []BulkImportResultItem) {
	o.Result = v
}

func (o BulkImportObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkImportObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableBulkImportObject struct {
	value *BulkImportObject
	isSet bool
}

func (v NullableBulkImportObject) Get() *BulkImportObject {
	return v.value
}

func (v *NullableBulkImportObject) Set(val *BulkImportObject) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkImportObject) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkImportObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkImportObject(val *BulkImportObject) *NullableBulkImportObject {
	return &NullableBulkImportObject{value: val, isSet: true}
}

func (v NullableBulkImportObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkImportObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


