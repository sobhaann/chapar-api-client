/*
Chapar Customer API

API for interacting with the Chapar shipping service. All POST requests use a unique `multipart/form-data` structure where the main payload is a JSON string inside a form field named `input`.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the ConsignmentNote type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsignmentNote{}

// ConsignmentNote struct for ConsignmentNote
type ConsignmentNote struct {
	Tracking *string `json:"tracking,omitempty"`
	Date *string `json:"date,omitempty"`
	AssingedPieces *string `json:"assinged_pieces,omitempty"`
	Weight *string `json:"weight,omitempty"`
	Service *string `json:"service,omitempty"`
	Value *string `json:"value,omitempty"`
	PaymentTerm *string `json:"payment_term,omitempty"`
	LastStatus *string `json:"last_status,omitempty"`
	DeliveryDate *string `json:"delivery_date,omitempty"`
	DeliveryPerson *string `json:"delivery_person,omitempty"`
	ChangeStateUrl *string `json:"change_state_url,omitempty"`
}

// NewConsignmentNote instantiates a new ConsignmentNote object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsignmentNote() *ConsignmentNote {
	this := ConsignmentNote{}
	return &this
}

// NewConsignmentNoteWithDefaults instantiates a new ConsignmentNote object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsignmentNoteWithDefaults() *ConsignmentNote {
	this := ConsignmentNote{}
	return &this
}

// GetTracking returns the Tracking field value if set, zero value otherwise.
func (o *ConsignmentNote) GetTracking() string {
	if o == nil || IsNil(o.Tracking) {
		var ret string
		return ret
	}
	return *o.Tracking
}

// GetTrackingOk returns a tuple with the Tracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsignmentNote) GetTrackingOk() (*string, bool) {
	if o == nil || IsNil(o.Tracking) {
		return nil, false
	}
	return o.Tracking, true
}

// HasTracking returns a boolean if a field has been set.
func (o *ConsignmentNote) HasTracking() bool {
	if o != nil && !IsNil(o.Tracking) {
		return true
	}

	return false
}

// SetTracking gets a reference to the given string and assigns it to the Tracking field.
func (o *ConsignmentNote) SetTracking(v string) {
	o.Tracking = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *ConsignmentNote) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsignmentNote) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *ConsignmentNote) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *ConsignmentNote) SetDate(v string) {
	o.Date = &v
}

// GetAssingedPieces returns the AssingedPieces field value if set, zero value otherwise.
func (o *ConsignmentNote) GetAssingedPieces() string {
	if o == nil || IsNil(o.AssingedPieces) {
		var ret string
		return ret
	}
	return *o.AssingedPieces
}

// GetAssingedPiecesOk returns a tuple with the AssingedPieces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsignmentNote) GetAssingedPiecesOk() (*string, bool) {
	if o == nil || IsNil(o.AssingedPieces) {
		return nil, false
	}
	return o.AssingedPieces, true
}

// HasAssingedPieces returns a boolean if a field has been set.
func (o *ConsignmentNote) HasAssingedPieces() bool {
	if o != nil && !IsNil(o.AssingedPieces) {
		return true
	}

	return false
}

// SetAssingedPieces gets a reference to the given string and assigns it to the AssingedPieces field.
func (o *ConsignmentNote) SetAssingedPieces(v string) {
	o.AssingedPieces = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *ConsignmentNote) GetWeight() string {
	if o == nil || IsNil(o.Weight) {
		var ret string
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsignmentNote) GetWeightOk() (*string, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *ConsignmentNote) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given string and assigns it to the Weight field.
func (o *ConsignmentNote) SetWeight(v string) {
	o.Weight = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *ConsignmentNote) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsignmentNote) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *ConsignmentNote) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *ConsignmentNote) SetService(v string) {
	o.Service = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ConsignmentNote) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsignmentNote) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ConsignmentNote) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ConsignmentNote) SetValue(v string) {
	o.Value = &v
}

// GetPaymentTerm returns the PaymentTerm field value if set, zero value otherwise.
func (o *ConsignmentNote) GetPaymentTerm() string {
	if o == nil || IsNil(o.PaymentTerm) {
		var ret string
		return ret
	}
	return *o.PaymentTerm
}

// GetPaymentTermOk returns a tuple with the PaymentTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsignmentNote) GetPaymentTermOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentTerm) {
		return nil, false
	}
	return o.PaymentTerm, true
}

// HasPaymentTerm returns a boolean if a field has been set.
func (o *ConsignmentNote) HasPaymentTerm() bool {
	if o != nil && !IsNil(o.PaymentTerm) {
		return true
	}

	return false
}

// SetPaymentTerm gets a reference to the given string and assigns it to the PaymentTerm field.
func (o *ConsignmentNote) SetPaymentTerm(v string) {
	o.PaymentTerm = &v
}

// GetLastStatus returns the LastStatus field value if set, zero value otherwise.
func (o *ConsignmentNote) GetLastStatus() string {
	if o == nil || IsNil(o.LastStatus) {
		var ret string
		return ret
	}
	return *o.LastStatus
}

// GetLastStatusOk returns a tuple with the LastStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsignmentNote) GetLastStatusOk() (*string, bool) {
	if o == nil || IsNil(o.LastStatus) {
		return nil, false
	}
	return o.LastStatus, true
}

// HasLastStatus returns a boolean if a field has been set.
func (o *ConsignmentNote) HasLastStatus() bool {
	if o != nil && !IsNil(o.LastStatus) {
		return true
	}

	return false
}

// SetLastStatus gets a reference to the given string and assigns it to the LastStatus field.
func (o *ConsignmentNote) SetLastStatus(v string) {
	o.LastStatus = &v
}

// GetDeliveryDate returns the DeliveryDate field value if set, zero value otherwise.
func (o *ConsignmentNote) GetDeliveryDate() string {
	if o == nil || IsNil(o.DeliveryDate) {
		var ret string
		return ret
	}
	return *o.DeliveryDate
}

// GetDeliveryDateOk returns a tuple with the DeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsignmentNote) GetDeliveryDateOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryDate) {
		return nil, false
	}
	return o.DeliveryDate, true
}

// HasDeliveryDate returns a boolean if a field has been set.
func (o *ConsignmentNote) HasDeliveryDate() bool {
	if o != nil && !IsNil(o.DeliveryDate) {
		return true
	}

	return false
}

// SetDeliveryDate gets a reference to the given string and assigns it to the DeliveryDate field.
func (o *ConsignmentNote) SetDeliveryDate(v string) {
	o.DeliveryDate = &v
}

// GetDeliveryPerson returns the DeliveryPerson field value if set, zero value otherwise.
func (o *ConsignmentNote) GetDeliveryPerson() string {
	if o == nil || IsNil(o.DeliveryPerson) {
		var ret string
		return ret
	}
	return *o.DeliveryPerson
}

// GetDeliveryPersonOk returns a tuple with the DeliveryPerson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsignmentNote) GetDeliveryPersonOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryPerson) {
		return nil, false
	}
	return o.DeliveryPerson, true
}

// HasDeliveryPerson returns a boolean if a field has been set.
func (o *ConsignmentNote) HasDeliveryPerson() bool {
	if o != nil && !IsNil(o.DeliveryPerson) {
		return true
	}

	return false
}

// SetDeliveryPerson gets a reference to the given string and assigns it to the DeliveryPerson field.
func (o *ConsignmentNote) SetDeliveryPerson(v string) {
	o.DeliveryPerson = &v
}

// GetChangeStateUrl returns the ChangeStateUrl field value if set, zero value otherwise.
func (o *ConsignmentNote) GetChangeStateUrl() string {
	if o == nil || IsNil(o.ChangeStateUrl) {
		var ret string
		return ret
	}
	return *o.ChangeStateUrl
}

// GetChangeStateUrlOk returns a tuple with the ChangeStateUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsignmentNote) GetChangeStateUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ChangeStateUrl) {
		return nil, false
	}
	return o.ChangeStateUrl, true
}

// HasChangeStateUrl returns a boolean if a field has been set.
func (o *ConsignmentNote) HasChangeStateUrl() bool {
	if o != nil && !IsNil(o.ChangeStateUrl) {
		return true
	}

	return false
}

// SetChangeStateUrl gets a reference to the given string and assigns it to the ChangeStateUrl field.
func (o *ConsignmentNote) SetChangeStateUrl(v string) {
	o.ChangeStateUrl = &v
}

func (o ConsignmentNote) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsignmentNote) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tracking) {
		toSerialize["tracking"] = o.Tracking
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.AssingedPieces) {
		toSerialize["assinged_pieces"] = o.AssingedPieces
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.PaymentTerm) {
		toSerialize["payment_term"] = o.PaymentTerm
	}
	if !IsNil(o.LastStatus) {
		toSerialize["last_status"] = o.LastStatus
	}
	if !IsNil(o.DeliveryDate) {
		toSerialize["delivery_date"] = o.DeliveryDate
	}
	if !IsNil(o.DeliveryPerson) {
		toSerialize["delivery_person"] = o.DeliveryPerson
	}
	if !IsNil(o.ChangeStateUrl) {
		toSerialize["change_state_url"] = o.ChangeStateUrl
	}
	return toSerialize, nil
}

type NullableConsignmentNote struct {
	value *ConsignmentNote
	isSet bool
}

func (v NullableConsignmentNote) Get() *ConsignmentNote {
	return v.value
}

func (v *NullableConsignmentNote) Set(val *ConsignmentNote) {
	v.value = val
	v.isSet = true
}

func (v NullableConsignmentNote) IsSet() bool {
	return v.isSet
}

func (v *NullableConsignmentNote) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsignmentNote(val *ConsignmentNote) *NullableConsignmentNote {
	return &NullableConsignmentNote{value: val, isSet: true}
}

func (v NullableConsignmentNote) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsignmentNote) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


