/*
Chapar Customer API

API for interacting with the Chapar shipping service. Note the unique request format: POST requests use a multipart/form-data body with a single field named \"input\" that contains a stringified JSON payload.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the BulkHistoryItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkHistoryItem{}

// BulkHistoryItem struct for BulkHistoryItem
type BulkHistoryItem struct {
	Time *string `json:"time,omitempty"`
	Date *string `json:"date,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusNote *string `json:"status_note,omitempty"`
	Tracking *string `json:"tracking,omitempty"`
	Reference *string `json:"reference,omitempty"`
}

// NewBulkHistoryItem instantiates a new BulkHistoryItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkHistoryItem() *BulkHistoryItem {
	this := BulkHistoryItem{}
	return &this
}

// NewBulkHistoryItemWithDefaults instantiates a new BulkHistoryItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkHistoryItemWithDefaults() *BulkHistoryItem {
	this := BulkHistoryItem{}
	return &this
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *BulkHistoryItem) GetTime() string {
	if o == nil || IsNil(o.Time) {
		var ret string
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkHistoryItem) GetTimeOk() (*string, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *BulkHistoryItem) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given string and assigns it to the Time field.
func (o *BulkHistoryItem) SetTime(v string) {
	o.Time = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *BulkHistoryItem) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkHistoryItem) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *BulkHistoryItem) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *BulkHistoryItem) SetDate(v string) {
	o.Date = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BulkHistoryItem) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkHistoryItem) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BulkHistoryItem) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BulkHistoryItem) SetStatus(v string) {
	o.Status = &v
}

// GetStatusNote returns the StatusNote field value if set, zero value otherwise.
func (o *BulkHistoryItem) GetStatusNote() string {
	if o == nil || IsNil(o.StatusNote) {
		var ret string
		return ret
	}
	return *o.StatusNote
}

// GetStatusNoteOk returns a tuple with the StatusNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkHistoryItem) GetStatusNoteOk() (*string, bool) {
	if o == nil || IsNil(o.StatusNote) {
		return nil, false
	}
	return o.StatusNote, true
}

// HasStatusNote returns a boolean if a field has been set.
func (o *BulkHistoryItem) HasStatusNote() bool {
	if o != nil && !IsNil(o.StatusNote) {
		return true
	}

	return false
}

// SetStatusNote gets a reference to the given string and assigns it to the StatusNote field.
func (o *BulkHistoryItem) SetStatusNote(v string) {
	o.StatusNote = &v
}

// GetTracking returns the Tracking field value if set, zero value otherwise.
func (o *BulkHistoryItem) GetTracking() string {
	if o == nil || IsNil(o.Tracking) {
		var ret string
		return ret
	}
	return *o.Tracking
}

// GetTrackingOk returns a tuple with the Tracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkHistoryItem) GetTrackingOk() (*string, bool) {
	if o == nil || IsNil(o.Tracking) {
		return nil, false
	}
	return o.Tracking, true
}

// HasTracking returns a boolean if a field has been set.
func (o *BulkHistoryItem) HasTracking() bool {
	if o != nil && !IsNil(o.Tracking) {
		return true
	}

	return false
}

// SetTracking gets a reference to the given string and assigns it to the Tracking field.
func (o *BulkHistoryItem) SetTracking(v string) {
	o.Tracking = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *BulkHistoryItem) GetReference() string {
	if o == nil || IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkHistoryItem) GetReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *BulkHistoryItem) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *BulkHistoryItem) SetReference(v string) {
	o.Reference = &v
}

func (o BulkHistoryItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkHistoryItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusNote) {
		toSerialize["status_note"] = o.StatusNote
	}
	if !IsNil(o.Tracking) {
		toSerialize["tracking"] = o.Tracking
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	return toSerialize, nil
}

type NullableBulkHistoryItem struct {
	value *BulkHistoryItem
	isSet bool
}

func (v NullableBulkHistoryItem) Get() *BulkHistoryItem {
	return v.value
}

func (v *NullableBulkHistoryItem) Set(val *BulkHistoryItem) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkHistoryItem) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkHistoryItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkHistoryItem(val *BulkHistoryItem) *NullableBulkHistoryItem {
	return &NullableBulkHistoryItem{value: val, isSet: true}
}

func (v NullableBulkHistoryItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkHistoryItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


