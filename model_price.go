/*
Chapar Customer API

API for interacting with the Chapar shipping service. All requests are sent with a single query parameter `input` which contains a URL-encoded JSON string payload.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the Price type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Price{}

// Price struct for Price
type Price struct {
	Zone *string `json:"zone,omitempty"`
	FldManualCost *int32 `json:"fld_Manual_Cost,omitempty"`
	FldPackCost *int32 `json:"fld_Pack_Cost,omitempty"`
	FldChargeCost *int32 `json:"fld_Charge_Cost,omitempty"`
	FldManualInsurance *int32 `json:"fld_Manual_Insurance,omitempty"`
	FldLabCost *int32 `json:"fld_Lab_Cost,omitempty"`
	FldManualVAT *int32 `json:"fld_Manual_VAT,omitempty"`
	FldTotalCost *int32 `json:"fld_Total_Cost,omitempty"`
	PriceList *string `json:"price_list,omitempty"`
	MinIns *string `json:"min_ins,omitempty"`
}

// NewPrice instantiates a new Price object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrice() *Price {
	this := Price{}
	return &this
}

// NewPriceWithDefaults instantiates a new Price object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceWithDefaults() *Price {
	this := Price{}
	return &this
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *Price) GetZone() string {
	if o == nil || IsNil(o.Zone) {
		var ret string
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Price) GetZoneOk() (*string, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *Price) HasZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given string and assigns it to the Zone field.
func (o *Price) SetZone(v string) {
	o.Zone = &v
}

// GetFldManualCost returns the FldManualCost field value if set, zero value otherwise.
func (o *Price) GetFldManualCost() int32 {
	if o == nil || IsNil(o.FldManualCost) {
		var ret int32
		return ret
	}
	return *o.FldManualCost
}

// GetFldManualCostOk returns a tuple with the FldManualCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Price) GetFldManualCostOk() (*int32, bool) {
	if o == nil || IsNil(o.FldManualCost) {
		return nil, false
	}
	return o.FldManualCost, true
}

// HasFldManualCost returns a boolean if a field has been set.
func (o *Price) HasFldManualCost() bool {
	if o != nil && !IsNil(o.FldManualCost) {
		return true
	}

	return false
}

// SetFldManualCost gets a reference to the given int32 and assigns it to the FldManualCost field.
func (o *Price) SetFldManualCost(v int32) {
	o.FldManualCost = &v
}

// GetFldPackCost returns the FldPackCost field value if set, zero value otherwise.
func (o *Price) GetFldPackCost() int32 {
	if o == nil || IsNil(o.FldPackCost) {
		var ret int32
		return ret
	}
	return *o.FldPackCost
}

// GetFldPackCostOk returns a tuple with the FldPackCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Price) GetFldPackCostOk() (*int32, bool) {
	if o == nil || IsNil(o.FldPackCost) {
		return nil, false
	}
	return o.FldPackCost, true
}

// HasFldPackCost returns a boolean if a field has been set.
func (o *Price) HasFldPackCost() bool {
	if o != nil && !IsNil(o.FldPackCost) {
		return true
	}

	return false
}

// SetFldPackCost gets a reference to the given int32 and assigns it to the FldPackCost field.
func (o *Price) SetFldPackCost(v int32) {
	o.FldPackCost = &v
}

// GetFldChargeCost returns the FldChargeCost field value if set, zero value otherwise.
func (o *Price) GetFldChargeCost() int32 {
	if o == nil || IsNil(o.FldChargeCost) {
		var ret int32
		return ret
	}
	return *o.FldChargeCost
}

// GetFldChargeCostOk returns a tuple with the FldChargeCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Price) GetFldChargeCostOk() (*int32, bool) {
	if o == nil || IsNil(o.FldChargeCost) {
		return nil, false
	}
	return o.FldChargeCost, true
}

// HasFldChargeCost returns a boolean if a field has been set.
func (o *Price) HasFldChargeCost() bool {
	if o != nil && !IsNil(o.FldChargeCost) {
		return true
	}

	return false
}

// SetFldChargeCost gets a reference to the given int32 and assigns it to the FldChargeCost field.
func (o *Price) SetFldChargeCost(v int32) {
	o.FldChargeCost = &v
}

// GetFldManualInsurance returns the FldManualInsurance field value if set, zero value otherwise.
func (o *Price) GetFldManualInsurance() int32 {
	if o == nil || IsNil(o.FldManualInsurance) {
		var ret int32
		return ret
	}
	return *o.FldManualInsurance
}

// GetFldManualInsuranceOk returns a tuple with the FldManualInsurance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Price) GetFldManualInsuranceOk() (*int32, bool) {
	if o == nil || IsNil(o.FldManualInsurance) {
		return nil, false
	}
	return o.FldManualInsurance, true
}

// HasFldManualInsurance returns a boolean if a field has been set.
func (o *Price) HasFldManualInsurance() bool {
	if o != nil && !IsNil(o.FldManualInsurance) {
		return true
	}

	return false
}

// SetFldManualInsurance gets a reference to the given int32 and assigns it to the FldManualInsurance field.
func (o *Price) SetFldManualInsurance(v int32) {
	o.FldManualInsurance = &v
}

// GetFldLabCost returns the FldLabCost field value if set, zero value otherwise.
func (o *Price) GetFldLabCost() int32 {
	if o == nil || IsNil(o.FldLabCost) {
		var ret int32
		return ret
	}
	return *o.FldLabCost
}

// GetFldLabCostOk returns a tuple with the FldLabCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Price) GetFldLabCostOk() (*int32, bool) {
	if o == nil || IsNil(o.FldLabCost) {
		return nil, false
	}
	return o.FldLabCost, true
}

// HasFldLabCost returns a boolean if a field has been set.
func (o *Price) HasFldLabCost() bool {
	if o != nil && !IsNil(o.FldLabCost) {
		return true
	}

	return false
}

// SetFldLabCost gets a reference to the given int32 and assigns it to the FldLabCost field.
func (o *Price) SetFldLabCost(v int32) {
	o.FldLabCost = &v
}

// GetFldManualVAT returns the FldManualVAT field value if set, zero value otherwise.
func (o *Price) GetFldManualVAT() int32 {
	if o == nil || IsNil(o.FldManualVAT) {
		var ret int32
		return ret
	}
	return *o.FldManualVAT
}

// GetFldManualVATOk returns a tuple with the FldManualVAT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Price) GetFldManualVATOk() (*int32, bool) {
	if o == nil || IsNil(o.FldManualVAT) {
		return nil, false
	}
	return o.FldManualVAT, true
}

// HasFldManualVAT returns a boolean if a field has been set.
func (o *Price) HasFldManualVAT() bool {
	if o != nil && !IsNil(o.FldManualVAT) {
		return true
	}

	return false
}

// SetFldManualVAT gets a reference to the given int32 and assigns it to the FldManualVAT field.
func (o *Price) SetFldManualVAT(v int32) {
	o.FldManualVAT = &v
}

// GetFldTotalCost returns the FldTotalCost field value if set, zero value otherwise.
func (o *Price) GetFldTotalCost() int32 {
	if o == nil || IsNil(o.FldTotalCost) {
		var ret int32
		return ret
	}
	return *o.FldTotalCost
}

// GetFldTotalCostOk returns a tuple with the FldTotalCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Price) GetFldTotalCostOk() (*int32, bool) {
	if o == nil || IsNil(o.FldTotalCost) {
		return nil, false
	}
	return o.FldTotalCost, true
}

// HasFldTotalCost returns a boolean if a field has been set.
func (o *Price) HasFldTotalCost() bool {
	if o != nil && !IsNil(o.FldTotalCost) {
		return true
	}

	return false
}

// SetFldTotalCost gets a reference to the given int32 and assigns it to the FldTotalCost field.
func (o *Price) SetFldTotalCost(v int32) {
	o.FldTotalCost = &v
}

// GetPriceList returns the PriceList field value if set, zero value otherwise.
func (o *Price) GetPriceList() string {
	if o == nil || IsNil(o.PriceList) {
		var ret string
		return ret
	}
	return *o.PriceList
}

// GetPriceListOk returns a tuple with the PriceList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Price) GetPriceListOk() (*string, bool) {
	if o == nil || IsNil(o.PriceList) {
		return nil, false
	}
	return o.PriceList, true
}

// HasPriceList returns a boolean if a field has been set.
func (o *Price) HasPriceList() bool {
	if o != nil && !IsNil(o.PriceList) {
		return true
	}

	return false
}

// SetPriceList gets a reference to the given string and assigns it to the PriceList field.
func (o *Price) SetPriceList(v string) {
	o.PriceList = &v
}

// GetMinIns returns the MinIns field value if set, zero value otherwise.
func (o *Price) GetMinIns() string {
	if o == nil || IsNil(o.MinIns) {
		var ret string
		return ret
	}
	return *o.MinIns
}

// GetMinInsOk returns a tuple with the MinIns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Price) GetMinInsOk() (*string, bool) {
	if o == nil || IsNil(o.MinIns) {
		return nil, false
	}
	return o.MinIns, true
}

// HasMinIns returns a boolean if a field has been set.
func (o *Price) HasMinIns() bool {
	if o != nil && !IsNil(o.MinIns) {
		return true
	}

	return false
}

// SetMinIns gets a reference to the given string and assigns it to the MinIns field.
func (o *Price) SetMinIns(v string) {
	o.MinIns = &v
}

func (o Price) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Price) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Zone) {
		toSerialize["zone"] = o.Zone
	}
	if !IsNil(o.FldManualCost) {
		toSerialize["fld_Manual_Cost"] = o.FldManualCost
	}
	if !IsNil(o.FldPackCost) {
		toSerialize["fld_Pack_Cost"] = o.FldPackCost
	}
	if !IsNil(o.FldChargeCost) {
		toSerialize["fld_Charge_Cost"] = o.FldChargeCost
	}
	if !IsNil(o.FldManualInsurance) {
		toSerialize["fld_Manual_Insurance"] = o.FldManualInsurance
	}
	if !IsNil(o.FldLabCost) {
		toSerialize["fld_Lab_Cost"] = o.FldLabCost
	}
	if !IsNil(o.FldManualVAT) {
		toSerialize["fld_Manual_VAT"] = o.FldManualVAT
	}
	if !IsNil(o.FldTotalCost) {
		toSerialize["fld_Total_Cost"] = o.FldTotalCost
	}
	if !IsNil(o.PriceList) {
		toSerialize["price_list"] = o.PriceList
	}
	if !IsNil(o.MinIns) {
		toSerialize["min_ins"] = o.MinIns
	}
	return toSerialize, nil
}

type NullablePrice struct {
	value *Price
	isSet bool
}

func (v NullablePrice) Get() *Price {
	return v.value
}

func (v *NullablePrice) Set(val *Price) {
	v.value = val
	v.isSet = true
}

func (v NullablePrice) IsSet() bool {
	return v.isSet
}

func (v *NullablePrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrice(val *Price) *NullablePrice {
	return &NullablePrice{value: val, isSet: true}
}

func (v NullablePrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


