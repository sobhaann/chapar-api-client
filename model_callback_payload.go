/*
Chapar Customer API

API for interacting with the Chapar shipping service. All requests are sent with a single query parameter `input` which contains a URL-encoded JSON string payload.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the CallbackPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallbackPayload{}

// CallbackPayload struct for CallbackPayload
type CallbackPayload struct {
	Location *CallbackLocation `json:"location,omitempty"`
	Date *string `json:"date,omitempty"`
	Status *string `json:"status,omitempty"`
	Comments *string `json:"comments,omitempty"`
}

// NewCallbackPayload instantiates a new CallbackPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallbackPayload() *CallbackPayload {
	this := CallbackPayload{}
	return &this
}

// NewCallbackPayloadWithDefaults instantiates a new CallbackPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallbackPayloadWithDefaults() *CallbackPayload {
	this := CallbackPayload{}
	return &this
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *CallbackPayload) GetLocation() CallbackLocation {
	if o == nil || IsNil(o.Location) {
		var ret CallbackLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackPayload) GetLocationOk() (*CallbackLocation, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *CallbackPayload) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given CallbackLocation and assigns it to the Location field.
func (o *CallbackPayload) SetLocation(v CallbackLocation) {
	o.Location = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *CallbackPayload) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackPayload) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *CallbackPayload) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *CallbackPayload) SetDate(v string) {
	o.Date = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CallbackPayload) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackPayload) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CallbackPayload) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CallbackPayload) SetStatus(v string) {
	o.Status = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *CallbackPayload) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackPayload) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *CallbackPayload) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *CallbackPayload) SetComments(v string) {
	o.Comments = &v
}

func (o CallbackPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallbackPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	return toSerialize, nil
}

type NullableCallbackPayload struct {
	value *CallbackPayload
	isSet bool
}

func (v NullableCallbackPayload) Get() *CallbackPayload {
	return v.value
}

func (v *NullableCallbackPayload) Set(val *CallbackPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCallbackPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCallbackPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallbackPayload(val *CallbackPayload) *NullableCallbackPayload {
	return &NullableCallbackPayload{value: val, isSet: true}
}

func (v NullableCallbackPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallbackPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


