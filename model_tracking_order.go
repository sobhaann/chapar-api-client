/*
Chapar Customer API

API for interacting with the Chapar shipping service. All requests are sent with a single query parameter `input` which contains a URL-encoded JSON string payload.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the TrackingOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackingOrder{}

// TrackingOrder struct for TrackingOrder
type TrackingOrder struct {
	DeliveredTo *string `json:"delivered_to,omitempty"`
	DeliveryTime *string `json:"delivery_time,omitempty"`
	Signature *string `json:"signature,omitempty"`
	Geo *Geo `json:"geo,omitempty"`
	History []TrackingHistoryItem `json:"history,omitempty"`
}

// NewTrackingOrder instantiates a new TrackingOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackingOrder() *TrackingOrder {
	this := TrackingOrder{}
	return &this
}

// NewTrackingOrderWithDefaults instantiates a new TrackingOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackingOrderWithDefaults() *TrackingOrder {
	this := TrackingOrder{}
	return &this
}

// GetDeliveredTo returns the DeliveredTo field value if set, zero value otherwise.
func (o *TrackingOrder) GetDeliveredTo() string {
	if o == nil || IsNil(o.DeliveredTo) {
		var ret string
		return ret
	}
	return *o.DeliveredTo
}

// GetDeliveredToOk returns a tuple with the DeliveredTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingOrder) GetDeliveredToOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveredTo) {
		return nil, false
	}
	return o.DeliveredTo, true
}

// HasDeliveredTo returns a boolean if a field has been set.
func (o *TrackingOrder) HasDeliveredTo() bool {
	if o != nil && !IsNil(o.DeliveredTo) {
		return true
	}

	return false
}

// SetDeliveredTo gets a reference to the given string and assigns it to the DeliveredTo field.
func (o *TrackingOrder) SetDeliveredTo(v string) {
	o.DeliveredTo = &v
}

// GetDeliveryTime returns the DeliveryTime field value if set, zero value otherwise.
func (o *TrackingOrder) GetDeliveryTime() string {
	if o == nil || IsNil(o.DeliveryTime) {
		var ret string
		return ret
	}
	return *o.DeliveryTime
}

// GetDeliveryTimeOk returns a tuple with the DeliveryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingOrder) GetDeliveryTimeOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryTime) {
		return nil, false
	}
	return o.DeliveryTime, true
}

// HasDeliveryTime returns a boolean if a field has been set.
func (o *TrackingOrder) HasDeliveryTime() bool {
	if o != nil && !IsNil(o.DeliveryTime) {
		return true
	}

	return false
}

// SetDeliveryTime gets a reference to the given string and assigns it to the DeliveryTime field.
func (o *TrackingOrder) SetDeliveryTime(v string) {
	o.DeliveryTime = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *TrackingOrder) GetSignature() string {
	if o == nil || IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingOrder) GetSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *TrackingOrder) HasSignature() bool {
	if o != nil && !IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *TrackingOrder) SetSignature(v string) {
	o.Signature = &v
}

// GetGeo returns the Geo field value if set, zero value otherwise.
func (o *TrackingOrder) GetGeo() Geo {
	if o == nil || IsNil(o.Geo) {
		var ret Geo
		return ret
	}
	return *o.Geo
}

// GetGeoOk returns a tuple with the Geo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingOrder) GetGeoOk() (*Geo, bool) {
	if o == nil || IsNil(o.Geo) {
		return nil, false
	}
	return o.Geo, true
}

// HasGeo returns a boolean if a field has been set.
func (o *TrackingOrder) HasGeo() bool {
	if o != nil && !IsNil(o.Geo) {
		return true
	}

	return false
}

// SetGeo gets a reference to the given Geo and assigns it to the Geo field.
func (o *TrackingOrder) SetGeo(v Geo) {
	o.Geo = &v
}

// GetHistory returns the History field value if set, zero value otherwise.
func (o *TrackingOrder) GetHistory() []TrackingHistoryItem {
	if o == nil || IsNil(o.History) {
		var ret []TrackingHistoryItem
		return ret
	}
	return o.History
}

// GetHistoryOk returns a tuple with the History field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingOrder) GetHistoryOk() ([]TrackingHistoryItem, bool) {
	if o == nil || IsNil(o.History) {
		return nil, false
	}
	return o.History, true
}

// HasHistory returns a boolean if a field has been set.
func (o *TrackingOrder) HasHistory() bool {
	if o != nil && !IsNil(o.History) {
		return true
	}

	return false
}

// SetHistory gets a reference to the given []TrackingHistoryItem and assigns it to the History field.
func (o *TrackingOrder) SetHistory(v []TrackingHistoryItem) {
	o.History = v
}

func (o TrackingOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackingOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeliveredTo) {
		toSerialize["delivered_to"] = o.DeliveredTo
	}
	if !IsNil(o.DeliveryTime) {
		toSerialize["delivery_time"] = o.DeliveryTime
	}
	if !IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	if !IsNil(o.Geo) {
		toSerialize["geo"] = o.Geo
	}
	if !IsNil(o.History) {
		toSerialize["history"] = o.History
	}
	return toSerialize, nil
}

type NullableTrackingOrder struct {
	value *TrackingOrder
	isSet bool
}

func (v NullableTrackingOrder) Get() *TrackingOrder {
	return v.value
}

func (v *NullableTrackingOrder) Set(val *TrackingOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackingOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackingOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackingOrder(val *TrackingOrder) *NullableTrackingOrder {
	return &NullableTrackingOrder{value: val, isSet: true}
}

func (v NullableTrackingOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackingOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


