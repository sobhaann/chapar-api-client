/*
Chapar Customer API

API for interacting with the Chapar shipping service. Note the unique request format: POST requests use a multipart/form-data body with a single field named \"input\" that contains a stringified JSON payload.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the TrackingObjectOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackingObjectOrder{}

// TrackingObjectOrder struct for TrackingObjectOrder
type TrackingObjectOrder struct {
	DeliveredTo NullableString `json:"delivered_to,omitempty"`
	DeliveryTime NullableString `json:"delivery_time,omitempty"`
	Signature NullableString `json:"signature,omitempty"`
	History []TrackingHistoryItem `json:"history,omitempty"`
}

// NewTrackingObjectOrder instantiates a new TrackingObjectOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackingObjectOrder() *TrackingObjectOrder {
	this := TrackingObjectOrder{}
	return &this
}

// NewTrackingObjectOrderWithDefaults instantiates a new TrackingObjectOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackingObjectOrderWithDefaults() *TrackingObjectOrder {
	this := TrackingObjectOrder{}
	return &this
}

// GetDeliveredTo returns the DeliveredTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectOrder) GetDeliveredTo() string {
	if o == nil || IsNil(o.DeliveredTo.Get()) {
		var ret string
		return ret
	}
	return *o.DeliveredTo.Get()
}

// GetDeliveredToOk returns a tuple with the DeliveredTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectOrder) GetDeliveredToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveredTo.Get(), o.DeliveredTo.IsSet()
}

// HasDeliveredTo returns a boolean if a field has been set.
func (o *TrackingObjectOrder) HasDeliveredTo() bool {
	if o != nil && o.DeliveredTo.IsSet() {
		return true
	}

	return false
}

// SetDeliveredTo gets a reference to the given NullableString and assigns it to the DeliveredTo field.
func (o *TrackingObjectOrder) SetDeliveredTo(v string) {
	o.DeliveredTo.Set(&v)
}
// SetDeliveredToNil sets the value for DeliveredTo to be an explicit nil
func (o *TrackingObjectOrder) SetDeliveredToNil() {
	o.DeliveredTo.Set(nil)
}

// UnsetDeliveredTo ensures that no value is present for DeliveredTo, not even an explicit nil
func (o *TrackingObjectOrder) UnsetDeliveredTo() {
	o.DeliveredTo.Unset()
}

// GetDeliveryTime returns the DeliveryTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectOrder) GetDeliveryTime() string {
	if o == nil || IsNil(o.DeliveryTime.Get()) {
		var ret string
		return ret
	}
	return *o.DeliveryTime.Get()
}

// GetDeliveryTimeOk returns a tuple with the DeliveryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectOrder) GetDeliveryTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryTime.Get(), o.DeliveryTime.IsSet()
}

// HasDeliveryTime returns a boolean if a field has been set.
func (o *TrackingObjectOrder) HasDeliveryTime() bool {
	if o != nil && o.DeliveryTime.IsSet() {
		return true
	}

	return false
}

// SetDeliveryTime gets a reference to the given NullableString and assigns it to the DeliveryTime field.
func (o *TrackingObjectOrder) SetDeliveryTime(v string) {
	o.DeliveryTime.Set(&v)
}
// SetDeliveryTimeNil sets the value for DeliveryTime to be an explicit nil
func (o *TrackingObjectOrder) SetDeliveryTimeNil() {
	o.DeliveryTime.Set(nil)
}

// UnsetDeliveryTime ensures that no value is present for DeliveryTime, not even an explicit nil
func (o *TrackingObjectOrder) UnsetDeliveryTime() {
	o.DeliveryTime.Unset()
}

// GetSignature returns the Signature field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrackingObjectOrder) GetSignature() string {
	if o == nil || IsNil(o.Signature.Get()) {
		var ret string
		return ret
	}
	return *o.Signature.Get()
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrackingObjectOrder) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Signature.Get(), o.Signature.IsSet()
}

// HasSignature returns a boolean if a field has been set.
func (o *TrackingObjectOrder) HasSignature() bool {
	if o != nil && o.Signature.IsSet() {
		return true
	}

	return false
}

// SetSignature gets a reference to the given NullableString and assigns it to the Signature field.
func (o *TrackingObjectOrder) SetSignature(v string) {
	o.Signature.Set(&v)
}
// SetSignatureNil sets the value for Signature to be an explicit nil
func (o *TrackingObjectOrder) SetSignatureNil() {
	o.Signature.Set(nil)
}

// UnsetSignature ensures that no value is present for Signature, not even an explicit nil
func (o *TrackingObjectOrder) UnsetSignature() {
	o.Signature.Unset()
}

// GetHistory returns the History field value if set, zero value otherwise.
func (o *TrackingObjectOrder) GetHistory() []TrackingHistoryItem {
	if o == nil || IsNil(o.History) {
		var ret []TrackingHistoryItem
		return ret
	}
	return o.History
}

// GetHistoryOk returns a tuple with the History field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingObjectOrder) GetHistoryOk() ([]TrackingHistoryItem, bool) {
	if o == nil || IsNil(o.History) {
		return nil, false
	}
	return o.History, true
}

// HasHistory returns a boolean if a field has been set.
func (o *TrackingObjectOrder) HasHistory() bool {
	if o != nil && !IsNil(o.History) {
		return true
	}

	return false
}

// SetHistory gets a reference to the given []TrackingHistoryItem and assigns it to the History field.
func (o *TrackingObjectOrder) SetHistory(v []TrackingHistoryItem) {
	o.History = v
}

func (o TrackingObjectOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackingObjectOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DeliveredTo.IsSet() {
		toSerialize["delivered_to"] = o.DeliveredTo.Get()
	}
	if o.DeliveryTime.IsSet() {
		toSerialize["delivery_time"] = o.DeliveryTime.Get()
	}
	if o.Signature.IsSet() {
		toSerialize["signature"] = o.Signature.Get()
	}
	if !IsNil(o.History) {
		toSerialize["history"] = o.History
	}
	return toSerialize, nil
}

type NullableTrackingObjectOrder struct {
	value *TrackingObjectOrder
	isSet bool
}

func (v NullableTrackingObjectOrder) Get() *TrackingObjectOrder {
	return v.value
}

func (v *NullableTrackingObjectOrder) Set(val *TrackingObjectOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackingObjectOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackingObjectOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackingObjectOrder(val *TrackingObjectOrder) *NullableTrackingObjectOrder {
	return &NullableTrackingObjectOrder{value: val, isSet: true}
}

func (v NullableTrackingObjectOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackingObjectOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


