/*
Chapar Customer API

API for interacting with the Chapar shipping service. All POST requests use a unique `multipart/form-data` structure where the main payload is a JSON string inside a form field named `input`.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the BulkHistoryReportResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkHistoryReportResponse{}

// BulkHistoryReportResponse struct for BulkHistoryReportResponse
type BulkHistoryReportResponse struct {
	Success *bool `json:"success,omitempty"`
	Data *BulkHistoryReportData `json:"data,omitempty"`
	Message NullableString `json:"message,omitempty"`
}

// NewBulkHistoryReportResponse instantiates a new BulkHistoryReportResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkHistoryReportResponse() *BulkHistoryReportResponse {
	this := BulkHistoryReportResponse{}
	return &this
}

// NewBulkHistoryReportResponseWithDefaults instantiates a new BulkHistoryReportResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkHistoryReportResponseWithDefaults() *BulkHistoryReportResponse {
	this := BulkHistoryReportResponse{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *BulkHistoryReportResponse) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkHistoryReportResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *BulkHistoryReportResponse) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *BulkHistoryReportResponse) SetSuccess(v bool) {
	o.Success = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *BulkHistoryReportResponse) GetData() BulkHistoryReportData {
	if o == nil || IsNil(o.Data) {
		var ret BulkHistoryReportData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkHistoryReportResponse) GetDataOk() (*BulkHistoryReportData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *BulkHistoryReportResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given BulkHistoryReportData and assigns it to the Data field.
func (o *BulkHistoryReportResponse) SetData(v BulkHistoryReportData) {
	o.Data = &v
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkHistoryReportResponse) GetMessage() string {
	if o == nil || IsNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkHistoryReportResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *BulkHistoryReportResponse) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *BulkHistoryReportResponse) SetMessage(v string) {
	o.Message.Set(&v)
}
// SetMessageNil sets the value for Message to be an explicit nil
func (o *BulkHistoryReportResponse) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *BulkHistoryReportResponse) UnsetMessage() {
	o.Message.Unset()
}

func (o BulkHistoryReportResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkHistoryReportResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	return toSerialize, nil
}

type NullableBulkHistoryReportResponse struct {
	value *BulkHistoryReportResponse
	isSet bool
}

func (v NullableBulkHistoryReportResponse) Get() *BulkHistoryReportResponse {
	return v.value
}

func (v *NullableBulkHistoryReportResponse) Set(val *BulkHistoryReportResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkHistoryReportResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkHistoryReportResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkHistoryReportResponse(val *BulkHistoryReportResponse) *NullableBulkHistoryReportResponse {
	return &NullableBulkHistoryReportResponse{value: val, isSet: true}
}

func (v NullableBulkHistoryReportResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkHistoryReportResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


