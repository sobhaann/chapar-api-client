/*
Chapar Customer API

API for interacting with the Chapar shipping service. All requests are sent with a single query parameter `input` which contains a URL-encoded JSON string payload.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the BulkHistoryReportResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkHistoryReportResponse{}

// BulkHistoryReportResponse struct for BulkHistoryReportResponse
type BulkHistoryReportResponse struct {
	History []BulkHistoryItem `json:"history,omitempty"`
}

// NewBulkHistoryReportResponse instantiates a new BulkHistoryReportResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkHistoryReportResponse() *BulkHistoryReportResponse {
	this := BulkHistoryReportResponse{}
	return &this
}

// NewBulkHistoryReportResponseWithDefaults instantiates a new BulkHistoryReportResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkHistoryReportResponseWithDefaults() *BulkHistoryReportResponse {
	this := BulkHistoryReportResponse{}
	return &this
}

// GetHistory returns the History field value if set, zero value otherwise.
func (o *BulkHistoryReportResponse) GetHistory() []BulkHistoryItem {
	if o == nil || IsNil(o.History) {
		var ret []BulkHistoryItem
		return ret
	}
	return o.History
}

// GetHistoryOk returns a tuple with the History field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkHistoryReportResponse) GetHistoryOk() ([]BulkHistoryItem, bool) {
	if o == nil || IsNil(o.History) {
		return nil, false
	}
	return o.History, true
}

// HasHistory returns a boolean if a field has been set.
func (o *BulkHistoryReportResponse) HasHistory() bool {
	if o != nil && !IsNil(o.History) {
		return true
	}

	return false
}

// SetHistory gets a reference to the given []BulkHistoryItem and assigns it to the History field.
func (o *BulkHistoryReportResponse) SetHistory(v []BulkHistoryItem) {
	o.History = v
}

func (o BulkHistoryReportResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkHistoryReportResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.History) {
		toSerialize["history"] = o.History
	}
	return toSerialize, nil
}

type NullableBulkHistoryReportResponse struct {
	value *BulkHistoryReportResponse
	isSet bool
}

func (v NullableBulkHistoryReportResponse) Get() *BulkHistoryReportResponse {
	return v.value
}

func (v *NullableBulkHistoryReportResponse) Set(val *BulkHistoryReportResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkHistoryReportResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkHistoryReportResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkHistoryReportResponse(val *BulkHistoryReportResponse) *NullableBulkHistoryReportResponse {
	return &NullableBulkHistoryReportResponse{value: val, isSet: true}
}

func (v NullableBulkHistoryReportResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkHistoryReportResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


