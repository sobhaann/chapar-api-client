/*
Chapar Customer API

API for interacting with the Chapar shipping service. All requests are sent with a single query parameter `input` which contains a URL-encoded JSON string payload.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chapar

import (
	"encoding/json"
)

// checks if the QuoteOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteOrder{}

// QuoteOrder struct for QuoteOrder
type QuoteOrder struct {
	Quote *int32 `json:"quote,omitempty"`
	Price *Price `json:"price,omitempty"`
	Currency *string `json:"currency,omitempty"`
}

// NewQuoteOrder instantiates a new QuoteOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteOrder() *QuoteOrder {
	this := QuoteOrder{}
	return &this
}

// NewQuoteOrderWithDefaults instantiates a new QuoteOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteOrderWithDefaults() *QuoteOrder {
	this := QuoteOrder{}
	return &this
}

// GetQuote returns the Quote field value if set, zero value otherwise.
func (o *QuoteOrder) GetQuote() int32 {
	if o == nil || IsNil(o.Quote) {
		var ret int32
		return ret
	}
	return *o.Quote
}

// GetQuoteOk returns a tuple with the Quote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOrder) GetQuoteOk() (*int32, bool) {
	if o == nil || IsNil(o.Quote) {
		return nil, false
	}
	return o.Quote, true
}

// HasQuote returns a boolean if a field has been set.
func (o *QuoteOrder) HasQuote() bool {
	if o != nil && !IsNil(o.Quote) {
		return true
	}

	return false
}

// SetQuote gets a reference to the given int32 and assigns it to the Quote field.
func (o *QuoteOrder) SetQuote(v int32) {
	o.Quote = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *QuoteOrder) GetPrice() Price {
	if o == nil || IsNil(o.Price) {
		var ret Price
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOrder) GetPriceOk() (*Price, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *QuoteOrder) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given Price and assigns it to the Price field.
func (o *QuoteOrder) SetPrice(v Price) {
	o.Price = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *QuoteOrder) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteOrder) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *QuoteOrder) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *QuoteOrder) SetCurrency(v string) {
	o.Currency = &v
}

func (o QuoteOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Quote) {
		toSerialize["quote"] = o.Quote
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	return toSerialize, nil
}

type NullableQuoteOrder struct {
	value *QuoteOrder
	isSet bool
}

func (v NullableQuoteOrder) Get() *QuoteOrder {
	return v.value
}

func (v *NullableQuoteOrder) Set(val *QuoteOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteOrder(val *QuoteOrder) *NullableQuoteOrder {
	return &NullableQuoteOrder{value: val, isSet: true}
}

func (v NullableQuoteOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


